# compiler: R8
# compiler_version: 8.2.42
# min_api: 21
# common_typos_disable
# {"id":"com.android.tools.r8.mapping","version":"2.2"}
# pg_map_id: fa095a8
# pg_map_hash: SHA-256 fa095a879b186229763c6f3d8b2af44f6e7329e8d0186198aa06c4c74c9a2de6
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    1:1:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)Landroidx/core/app/RemoteActionCompat;"}
    1:1:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/RemoteActionCompat;Lj/b;)V"}
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    1:1:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)Landroidx/core/graphics/drawable/IconCompat;"}
    1:1:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/drawable/IconCompat;Lj/b;)V"}
androidx.annotation.Keep -> androidx.annotation.Keep:
# {"id":"sourceFile","fileName":"Keep.jvm.kt"}
androidx.arch.core.executor.ArchTaskExecutor -> a.b:
# {"id":"sourceFile","fileName":"ArchTaskExecutor.java"}
    androidx.arch.core.executor.TaskExecutor mDelegate -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/d;"}
    androidx.arch.core.executor.ArchTaskExecutor sInstance -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"La/b;"}
    1:3:void androidx.arch.core.executor.TaskExecutor.<init>():0:0 -> <init>
    1:3:void <init>():0 -> <init>
    4:11:void <init>():0:0 -> <init>
    1:1:androidx.arch.core.executor.ArchTaskExecutor getInstance():0:0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"()La/b;"}
androidx.arch.core.executor.ArchTaskExecutor$$ExternalSyntheticLambda0 -> a.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.<init>():0:0 -> <init>
    1:6:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.$r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.arch.core.executor.ArchTaskExecutor$$InternalSyntheticLambda$2$0cd99cbb60de02b88cedd941efa6ec8920ea8ed67fbe5be81367346cb3187fdb$0.execute$bridge(java.lang.Runnable):0:0 -> execute
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.executor.DefaultTaskExecutor -> a.d:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    java.lang.Object mLock -> c
    1:3:void androidx.arch.core.executor.TaskExecutor.<init>():0:0 -> <init>
    1:3:void <init>():0 -> <init>
    4:13:void <init>():0:0 -> <init>
androidx.arch.core.executor.DefaultTaskExecutor$1 -> a.c:
# {"id":"sourceFile","fileName":"DefaultTaskExecutor.java"}
    java.util.concurrent.atomic.AtomicInteger mThreadId -> a
    1:1:void <init>(androidx.arch.core.executor.DefaultTaskExecutor):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    1:1:java.lang.Thread newThread(java.lang.Runnable):0:0 -> newThread
androidx.arch.core.internal.FastSafeIterableMap -> b.a:
# {"id":"sourceFile","fileName":"FastSafeIterableMap.java"}
    java.util.WeakHashMap androidx.arch.core.internal.SafeIterableMap.mIterators -> a
    1:10:void androidx.arch.core.internal.SafeIterableMap.<init>():0:0 -> <init>
    1:10:void <init>():0 -> <init>
    11:16:void <init>():0:0 -> <init>
    16:22:boolean androidx.arch.core.internal.SafeIterableMap.equals(java.lang.Object):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    3:9:void androidx.arch.core.executor.TaskExecutor.<init>():0:0 -> b
    3:9:void androidx.arch.core.internal.SafeIterableMap$ListIterator.<init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0 -> b
    3:9:void androidx.arch.core.internal.SafeIterableMap$AscendingIterator.<init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry):0 -> b
    3:9:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.iterator():0 -> b
    10:13:java.util.Iterator androidx.arch.core.internal.SafeIterableMap.iterator():0:0 -> b
    1:6:java.lang.String androidx.arch.core.internal.SafeIterableMap.toString():0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean equals(java.lang.Object):0:0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:int androidx.arch.core.internal.SafeIterableMap.hashCode():0:0 -> hashCode
    1:5:int hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.util.Iterator iterator():0:0 -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.arch.core.internal.SafeIterableMap -> R8$$REMOVED$$CLASS$$0:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> b.b:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
androidx.arch.core.internal.SafeIterableMap$ListIterator -> b.c:
# {"id":"sourceFile","fileName":"SafeIterableMap.java"}
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
androidx.collection.ArrayMap -> c.b:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    int[] androidx.collection.SimpleArrayMap.mHashes -> a
    java.lang.Object[] androidx.collection.SimpleArrayMap.mArray -> b
    int androidx.collection.SimpleArrayMap.mSize -> c
    androidx.collection.MapCollections mCollections -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    java.lang.Object[] androidx.collection.SimpleArrayMap.mBaseCache -> e
    int androidx.collection.SimpleArrayMap.mBaseCacheSize -> f
    java.lang.Object[] androidx.collection.SimpleArrayMap.mTwiceBaseCache -> g
    int androidx.collection.SimpleArrayMap.mTwiceBaseCacheSize -> h
    1:15:void androidx.collection.SimpleArrayMap.<init>():0:0 -> <init>
    1:15:void <init>():0 -> <init>
    10:96:void androidx.collection.SimpleArrayMap.allocArrays(int):0:0 -> a
    10:96:void allocArrays(int):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    10:23:int androidx.collection.ContainerHelpers.binarySearch(int[],int,int):0:0 -> b
    10:23:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0 -> b
    24:31:int androidx.collection.SimpleArrayMap.binarySearchHashes(int[],int,int):0:0 -> b
    1:1:void androidx.collection.SimpleArrayMap.clear():0:0 -> c
    1:4:void clear():0:0 -> clear
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean containsKey(java.lang.Object):0:0 -> containsKey
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:boolean containsValue(java.lang.Object):0:0 -> containsValue
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.collection.SimpleArrayMap.containsKey(java.lang.Object):0:0 -> d
    1:1:boolean androidx.collection.SimpleArrayMap.containsValue(java.lang.Object):0:0 -> e
    5:13:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> entrySet
    5:13:java.util.Set entrySet():0 -> entrySet
    14:17:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    14:17:java.util.Set entrySet():0 -> entrySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:28:java.util.Set androidx.collection.MapCollections.getEntrySet():0:0 -> entrySet
    18:28:java.util.Set entrySet():0 -> entrySet
    1:5:boolean equals(java.lang.Object):0:0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    14:27:int androidx.collection.SimpleArrayMap.size():0:0 -> f
    14:27:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    28:31:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> f
    28:31:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    32:34:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> f
    32:34:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    35:42:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> f
    35:42:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    43:49:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    50:85:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    86:89:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> f
    86:89:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    90:91:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> f
    90:91:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0 -> f
    92:118:boolean androidx.collection.SimpleArrayMap.equals(java.lang.Object):0:0 -> f
    1:1:void androidx.collection.SimpleArrayMap.freeArrays(int[],java.lang.Object[],int):0:0 -> g
    2:6:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> get
    2:6:java.lang.Object get(java.lang.Object):0 -> get
      # {"id":"com.android.tools.r8.synthesized"}
    1:5:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object):0:0 -> getOrDefault
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.getOrDefault(java.lang.Object,java.lang.Object):0:0 -> h
    1:5:int hashCode():0:0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int androidx.collection.SimpleArrayMap.hashCode():0:0 -> i
    1:5:boolean isEmpty():0:0 -> isEmpty
      # {"id":"com.android.tools.r8.synthesized"}
    9:84:int androidx.collection.SimpleArrayMap.indexOf(java.lang.Object,int):0:0 -> j
    9:84:int indexOf(java.lang.Object,int):0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)I"}
    3:16:int androidx.collection.SimpleArrayMap.indexOfKey(java.lang.Object):0:0 -> k
    3:16:int indexOfKey(java.lang.Object):0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
    5:13:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> keySet
    5:13:java.util.Set keySet():0 -> keySet
    14:17:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    14:17:java.util.Set keySet():0 -> keySet
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:28:java.util.Set androidx.collection.MapCollections.getKeySet():0:0 -> keySet
    18:28:java.util.Set keySet():0 -> keySet
    10:74:int androidx.collection.SimpleArrayMap.indexOfNull():0:0 -> l
    10:74:int indexOfNull():0 -> l
      # {"id":"com.android.tools.r8.synthesized"}
    13:40:int androidx.collection.SimpleArrayMap.indexOfValue(java.lang.Object):0:0 -> m
    13:40:int indexOfValue(java.lang.Object):0 -> m
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean androidx.collection.SimpleArrayMap.isEmpty():0:0 -> n
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.put(java.lang.Object,java.lang.Object):0:0 -> o
    2:7:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> p
    2:7:java.lang.Object androidx.collection.SimpleArrayMap.putIfAbsent(java.lang.Object,java.lang.Object):0 -> p
      # {"id":"com.android.tools.r8.synthesized"}
    8:12:java.lang.Object androidx.collection.SimpleArrayMap.putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> p
    1:5:java.lang.Object put(java.lang.Object,java.lang.Object):0:0 -> put
      # {"id":"com.android.tools.r8.synthesized"}
    12:43:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    12:43:void putAll(java.util.Map):0 -> putAll
    44:71:void putAll(java.util.Map):0:0 -> putAll
    72:76:void putAll(java.util.Map):0:0 -> putAll
    77:82:void androidx.collection.SimpleArrayMap.ensureCapacity(int):0:0 -> putAll
    77:82:void putAll(java.util.Map):0 -> putAll
    1:5:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object):0:0 -> putIfAbsent
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object androidx.collection.SimpleArrayMap.remove(java.lang.Object):0:0 -> q
    13:18:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> r
    13:18:boolean androidx.collection.SimpleArrayMap.remove(java.lang.Object,java.lang.Object):0 -> r
    19:30:boolean androidx.collection.SimpleArrayMap.remove(java.lang.Object,java.lang.Object):0:0 -> r
    1:1:java.lang.Object remove(java.lang.Object):0:0 -> remove
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:boolean remove(java.lang.Object,java.lang.Object):0:0 -> remove
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.Object replace(java.lang.Object,java.lang.Object):0:0 -> replace
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> replace
      # {"id":"com.android.tools.r8.synthesized"}
    7:134:java.lang.Object androidx.collection.SimpleArrayMap.removeAt(int):0:0 -> s
    7:134:java.lang.Object removeAt(int):0 -> s
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int size():0:0 -> size
      # {"id":"com.android.tools.r8.synthesized"}
    13:19:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> t
    13:19:java.lang.Object androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object):0 -> t
    1:5:java.lang.String toString():0:0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
    12:17:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> u
    12:17:boolean androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object,java.lang.Object):0 -> u
    18:25:boolean androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object,java.lang.Object):0:0 -> u
    26:32:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> u
    26:32:boolean androidx.collection.SimpleArrayMap.replace(java.lang.Object,java.lang.Object,java.lang.Object):0 -> u
    1:9:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
      # {"id":"com.android.tools.r8.synthesized"}
    10:39:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
    40:45:java.lang.Object androidx.collection.SimpleArrayMap.keyAt(int):0:0 -> v
    40:45:java.lang.String androidx.collection.SimpleArrayMap.toString():0 -> v
    46:61:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
    62:65:java.lang.Object androidx.collection.SimpleArrayMap.valueAt(int):0:0 -> v
    62:65:java.lang.String androidx.collection.SimpleArrayMap.toString():0 -> v
    66:85:java.lang.String androidx.collection.SimpleArrayMap.toString():0:0 -> v
    5:13:androidx.collection.MapCollections androidx.collection.ArrayMap.getCollection():0:0 -> values
    5:13:java.util.Collection values():0 -> values
    14:17:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    14:17:java.util.Collection values():0 -> values
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:27:java.util.Collection androidx.collection.MapCollections.getValues():0:0 -> values
    18:27:java.util.Collection values():0 -> values
androidx.collection.ArrayMap$1 -> c.a:
# {"id":"sourceFile","fileName":"ArrayMap.java"}
    androidx.collection.MapCollections$EntrySet androidx.collection.MapCollections.mEntrySet -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/e;"}
    androidx.collection.MapCollections$KeySet androidx.collection.MapCollections.mKeySet -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/e;"}
    androidx.collection.MapCollections$ValuesCollection androidx.collection.MapCollections.mValues -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/g;"}
    androidx.collection.ArrayMap this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/b;"}
    1:6:void androidx.collection.MapCollections.<init>():0:0 -> <init>
    1:6:void <init>(androidx.collection.ArrayMap):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;)V"}
    1:1:java.lang.Object colGetEntry(int,int):0:0 -> a
    1:1:void colRemoveAt(int):0:0 -> b
    1:1:boolean androidx.collection.MapCollections.equalsSetHelper(java.util.Set,java.lang.Object):0:0 -> c
    3:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> d
    3:4:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(java.lang.Object[],int):0 -> d
    3:4:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    5:40:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(java.lang.Object[],int):0:0 -> d
    5:40:java.lang.Object[] toArrayHelper(java.lang.Object[],int):0 -> d
androidx.collection.ContainerHelpers -> c.c:
# {"id":"sourceFile","fileName":"ContainerHelpers.java"}
    int[] EMPTY_INTS -> a
    java.lang.Object[] EMPTY_OBJECTS -> b
    1:1:void <clinit>():0:0 -> <clinit>
androidx.collection.MapCollections -> R8$$REMOVED$$CLASS$$2:
# {"id":"sourceFile","fileName":"MapCollections.java"}
androidx.collection.MapCollections$ArrayIterator -> c.d:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int mOffset -> a
    int mSize -> b
    int mIndex -> c
    boolean mCanRemove -> d
    androidx.collection.MapCollections this$0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    11:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    11:12:void <init>(androidx.collection.MapCollections,int):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;I)V"}
    13:17:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    13:17:void <init>(androidx.collection.MapCollections,int):0 -> <init>
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:java.lang.Object next():0:0 -> next
    1:1:void remove():0:0 -> remove
androidx.collection.MapCollections$EntrySet -> c.e:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.collection.MapCollections this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    1:8:void androidx.collection.MapCollections$EntrySet.<init>(androidx.collection.MapCollections):0:0 -> <init>
    1:8:void $r8$init$synthetic(androidx.collection.ArrayMap$1,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;I)V"}
    6:11:boolean androidx.collection.MapCollections$KeySet.add(java.lang.Object):0:0 -> add
    6:11:boolean add$bridge(java.lang.Object):0 -> add
      # {"id":"com.android.tools.r8.synthesized"}
    12:13:boolean androidx.collection.MapCollections$EntrySet.add(java.lang.Object):0:0 -> add
    12:13:boolean add$bridge(java.lang.Object):0 -> add
    14:20:boolean androidx.collection.MapCollections$EntrySet.add(java.util.Map$Entry):0:0 -> add
    14:20:boolean androidx.collection.MapCollections$EntrySet.add(java.lang.Object):0 -> add
    14:20:boolean add$bridge(java.lang.Object):0 -> add
    6:13:boolean androidx.collection.MapCollections$KeySet.addAll(java.util.Collection):0:0 -> addAll
    6:13:boolean addAll$bridge(java.util.Collection):0 -> addAll
      # {"id":"com.android.tools.r8.synthesized"}
    14:15:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> addAll
    14:15:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    14:15:boolean addAll$bridge(java.util.Collection):0 -> addAll
    16:17:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> addAll
    16:17:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    16:17:boolean addAll$bridge(java.util.Collection):0 -> addAll
    18:43:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0:0 -> addAll
    18:43:boolean addAll$bridge(java.util.Collection):0 -> addAll
    44:47:void androidx.collection.ArrayMap$1.colPut(java.lang.Object,java.lang.Object):0:0 -> addAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    44:47:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    44:47:boolean addAll$bridge(java.util.Collection):0 -> addAll
    48:56:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> addAll
    48:56:boolean androidx.collection.MapCollections$EntrySet.addAll(java.util.Collection):0 -> addAll
    48:56:boolean addAll$bridge(java.util.Collection):0 -> addAll
    8:9:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    8:9:void androidx.collection.MapCollections$KeySet.clear():0 -> clear
    8:9:void clear$bridge():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    10:13:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    10:13:void androidx.collection.MapCollections$KeySet.clear():0 -> clear
    10:13:void clear$bridge():0 -> clear
    14:15:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    14:15:void androidx.collection.MapCollections$EntrySet.clear():0 -> clear
    14:15:void clear$bridge():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:20:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    16:20:void androidx.collection.MapCollections$EntrySet.clear():0 -> clear
    16:20:void clear$bridge():0 -> clear
    10:11:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    10:11:boolean androidx.collection.MapCollections$KeySet.contains(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:11:boolean contains$bridge(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.synthesized"}
    12:19:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    12:19:boolean androidx.collection.MapCollections$KeySet.contains(java.lang.Object):0 -> contains
    12:19:boolean contains$bridge(java.lang.Object):0 -> contains
    20:30:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0:0 -> contains
    20:30:boolean contains$bridge(java.lang.Object):0 -> contains
    31:32:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    31:32:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    31:32:boolean contains$bridge(java.lang.Object):0 -> contains
    33:39:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> contains
    33:39:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    33:39:boolean contains$bridge(java.lang.Object):0 -> contains
    40:51:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0:0 -> contains
    40:51:boolean contains$bridge(java.lang.Object):0 -> contains
    52:60:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> contains
    52:60:boolean androidx.collection.MapCollections$EntrySet.contains(java.lang.Object):0 -> contains
    52:60:boolean contains$bridge(java.lang.Object):0 -> contains
    10:11:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> containsAll
    10:11:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:11:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.synthesized"}
    12:25:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    12:25:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
    12:25:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
    26:33:boolean androidx.collection.MapCollections.containsAllHelper(java.util.Map,java.util.Collection):0:0 -> containsAll
    26:33:boolean androidx.collection.MapCollections$KeySet.containsAll(java.util.Collection):0 -> containsAll
    26:33:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    34:56:boolean androidx.collection.MapCollections$EntrySet.containsAll(java.util.Collection):0:0 -> containsAll
    34:56:boolean containsAll$bridge(java.util.Collection):0 -> containsAll
    6:10:boolean androidx.collection.MapCollections$KeySet.equals(java.lang.Object):0:0 -> equals
    6:10:boolean equals$bridge(java.lang.Object):0 -> equals
      # {"id":"com.android.tools.r8.synthesized"}
    11:16:boolean androidx.collection.MapCollections$EntrySet.equals(java.lang.Object):0:0 -> equals
    11:16:boolean equals$bridge(java.lang.Object):0 -> equals
    10:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    10:11:int androidx.collection.MapCollections$KeySet.hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:11:int hashCode$bridge():0 -> hashCode
      # {"id":"com.android.tools.r8.synthesized"}
    12:17:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    12:17:int androidx.collection.MapCollections$KeySet.hashCode():0 -> hashCode
    12:17:int hashCode$bridge():0 -> hashCode
    18:34:int androidx.collection.MapCollections$KeySet.hashCode():0:0 -> hashCode
    18:34:int hashCode$bridge():0 -> hashCode
    35:36:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    35:36:int androidx.collection.MapCollections$EntrySet.hashCode():0 -> hashCode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    35:36:int hashCode$bridge():0 -> hashCode
    37:42:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> hashCode
    37:42:int androidx.collection.MapCollections$EntrySet.hashCode():0 -> hashCode
    37:42:int hashCode$bridge():0 -> hashCode
    43:72:int androidx.collection.MapCollections$EntrySet.hashCode():0:0 -> hashCode
    43:72:int hashCode$bridge():0 -> hashCode
    10:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    10:11:boolean androidx.collection.MapCollections$KeySet.isEmpty():0 -> isEmpty
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    10:11:boolean isEmpty$bridge():0 -> isEmpty
      # {"id":"com.android.tools.r8.synthesized"}
    12:17:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    12:17:boolean androidx.collection.MapCollections$KeySet.isEmpty():0 -> isEmpty
    12:17:boolean isEmpty$bridge():0 -> isEmpty
    18:19:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    18:19:boolean androidx.collection.MapCollections$EntrySet.isEmpty():0 -> isEmpty
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    18:19:boolean isEmpty$bridge():0 -> isEmpty
    20:26:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    20:26:boolean androidx.collection.MapCollections$EntrySet.isEmpty():0 -> isEmpty
    20:26:boolean isEmpty$bridge():0 -> isEmpty
    8:14:java.util.Iterator androidx.collection.MapCollections$KeySet.iterator():0:0 -> iterator
    8:14:java.util.Iterator iterator$bridge():0 -> iterator
      # {"id":"com.android.tools.r8.synthesized"}
    15:20:java.util.Iterator androidx.collection.MapCollections$EntrySet.iterator():0:0 -> iterator
    15:20:java.util.Iterator iterator$bridge():0 -> iterator
    8:9:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> remove
    8:9:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:9:boolean remove$bridge(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.synthesized"}
    10:15:int androidx.collection.ArrayMap$1.colIndexOfKey(java.lang.Object):0:0 -> remove
    10:15:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0 -> remove
    10:15:boolean remove$bridge(java.lang.Object):0 -> remove
    16:22:boolean androidx.collection.MapCollections$KeySet.remove(java.lang.Object):0:0 -> remove
    16:22:boolean remove$bridge(java.lang.Object):0 -> remove
    23:28:boolean androidx.collection.MapCollections$EntrySet.remove(java.lang.Object):0:0 -> remove
    23:28:boolean remove$bridge(java.lang.Object):0 -> remove
    8:9:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> removeAll
    8:9:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:9:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.synthesized"}
    10:11:int androidx.collection.SimpleArrayMap.size():0:0 -> removeAll
    10:11:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0 -> removeAll
    10:11:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    10:11:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    12:25:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    12:25:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    12:25:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    26:29:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0:0 -> removeAll
    26:29:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    26:29:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    30:37:int androidx.collection.SimpleArrayMap.size():0:0 -> removeAll
    30:37:boolean androidx.collection.MapCollections.removeAllHelper(java.util.Map,java.util.Collection):0 -> removeAll
    30:37:boolean androidx.collection.MapCollections$KeySet.removeAll(java.util.Collection):0 -> removeAll
    30:37:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    38:44:boolean androidx.collection.MapCollections$EntrySet.removeAll(java.util.Collection):0:0 -> removeAll
    38:44:boolean removeAll$bridge(java.util.Collection):0 -> removeAll
    8:9:java.util.Map androidx.collection.ArrayMap$1.colGetMap():0:0 -> retainAll
    8:9:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:9:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.synthesized"}
    10:11:int androidx.collection.SimpleArrayMap.size():0:0 -> retainAll
    10:11:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0 -> retainAll
    10:11:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    10:11:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    12:41:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0:0 -> retainAll
    12:41:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    12:41:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    42:49:int androidx.collection.SimpleArrayMap.size():0:0 -> retainAll
    42:49:boolean androidx.collection.MapCollections.retainAllHelper(java.util.Map,java.util.Collection):0 -> retainAll
    42:49:boolean androidx.collection.MapCollections$KeySet.retainAll(java.util.Collection):0 -> retainAll
    42:49:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    50:56:boolean androidx.collection.MapCollections$EntrySet.retainAll(java.util.Collection):0:0 -> retainAll
    50:56:boolean retainAll$bridge(java.util.Collection):0 -> retainAll
    8:9:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    8:9:int androidx.collection.MapCollections$KeySet.size():0 -> size
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    8:9:int size$bridge():0 -> size
      # {"id":"com.android.tools.r8.synthesized"}
    10:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    10:12:int androidx.collection.MapCollections$KeySet.size():0 -> size
    10:12:int size$bridge():0 -> size
    13:14:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    13:14:int androidx.collection.MapCollections$EntrySet.size():0 -> size
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    13:14:int size$bridge():0 -> size
    15:18:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    15:18:int androidx.collection.MapCollections$EntrySet.size():0 -> size
    15:18:int size$bridge():0 -> size
    1:1:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    1:1:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    1:1:java.lang.Object[] toArray$bridge():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    2:2:java.lang.Object[] toArray$bridge():0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray():0 -> toArray
    3:3:java.lang.Object[] toArray$bridge():0 -> toArray
    4:4:java.lang.Object[] androidx.collection.MapCollections$EntrySet.toArray():0:0 -> toArray
    4:4:java.lang.Object[] toArray$bridge():0 -> toArray
    5:5:java.lang.Object[] androidx.collection.MapCollections$KeySet.toArray(java.lang.Object[]):0:0 -> toArray
    5:5:java.lang.Object[] toArray$bridge(java.lang.Object[]):0 -> toArray
      # {"id":"com.android.tools.r8.synthesized"}
    6:6:java.lang.Object[] androidx.collection.MapCollections$EntrySet.toArray(java.lang.Object[]):0:0 -> toArray
    6:6:java.lang.Object[] toArray$bridge(java.lang.Object[]):0 -> toArray
androidx.collection.MapCollections$KeySet -> R8$$REMOVED$$CLASS$$1:
# {"id":"sourceFile","fileName":"MapCollections.java"}
androidx.collection.MapCollections$MapIterator -> c.f:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    int mEnd -> a
    int mIndex -> b
    boolean mEntryValid -> c
    androidx.collection.MapCollections this$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    9:10:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    9:10:void <init>(androidx.collection.MapCollections):0 -> <init>
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;)V"}
    11:20:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> <init>
    11:20:void <init>(androidx.collection.MapCollections):0 -> <init>
    29:34:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> equals
    29:34:boolean equals(java.lang.Object):0 -> equals
    35:49:boolean equals(java.lang.Object):0:0 -> equals
    50:57:boolean androidx.collection.ContainerHelpers.equal(java.lang.Object,java.lang.Object):0:0 -> equals
    50:57:boolean equals(java.lang.Object):0 -> equals
    58:65:boolean equals(java.lang.Object):0:0 -> equals
    1:1:java.lang.Object getKey():0:0 -> getKey
    1:1:java.lang.Object getValue():0:0 -> getValue
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:int hashCode():0:0 -> hashCode
    1:21:java.util.Map$Entry androidx.collection.MapCollections$MapIterator.next():0:0 -> next
    1:21:java.lang.Object next():0 -> next
    1:1:void remove():0:0 -> remove
    9:14:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0:0 -> setValue
    9:14:java.lang.Object setValue(java.lang.Object):0 -> setValue
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:16:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> setValue
    15:16:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0 -> setValue
    15:16:java.lang.Object setValue(java.lang.Object):0 -> setValue
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    17:21:java.lang.Object androidx.collection.SimpleArrayMap.setValueAt(int,java.lang.Object):0:0 -> setValue
    17:21:java.lang.Object androidx.collection.ArrayMap$1.colSetValue(int,java.lang.Object):0 -> setValue
    17:21:java.lang.Object setValue(java.lang.Object):0 -> setValue
    22:29:java.lang.Object setValue(java.lang.Object):0:0 -> setValue
    1:1:java.lang.String toString():0:0 -> toString
androidx.collection.MapCollections$ValuesCollection -> c.g:
# {"id":"sourceFile","fileName":"MapCollections.java"}
    androidx.collection.MapCollections this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/a;"}
    1:1:void <init>(androidx.collection.MapCollections):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/a;)V"}
    1:1:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(java.util.Collection):0:0 -> addAll
    3:4:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    3:4:void clear():0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    5:8:void androidx.collection.ArrayMap$1.colClear():0:0 -> clear
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    5:8:void clear():0 -> clear
    3:4:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> contains
    3:4:boolean contains(java.lang.Object):0 -> contains
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:14:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> contains
    5:14:boolean contains(java.lang.Object):0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    3:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    3:4:boolean isEmpty():0 -> isEmpty
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:12:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> isEmpty
    5:12:boolean isEmpty():0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    3:4:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> remove
    3:4:boolean remove(java.lang.Object):0 -> remove
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:10:int androidx.collection.ArrayMap$1.colIndexOfValue(java.lang.Object):0:0 -> remove
    5:10:boolean remove(java.lang.Object):0 -> remove
    11:17:boolean remove(java.lang.Object):0:0 -> remove
    3:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> removeAll
    3:4:boolean removeAll(java.util.Collection):0 -> removeAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> removeAll
    5:11:boolean removeAll(java.util.Collection):0 -> removeAll
    12:32:boolean removeAll(java.util.Collection):0:0 -> removeAll
    3:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> retainAll
    3:4:boolean retainAll(java.util.Collection):0 -> retainAll
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:11:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> retainAll
    5:11:boolean retainAll(java.util.Collection):0 -> retainAll
    12:32:boolean retainAll(java.util.Collection):0:0 -> retainAll
    3:4:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    3:4:int size():0 -> size
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    5:7:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> size
    5:7:int size():0 -> size
    1:1:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    1:1:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    2:2:int androidx.collection.ArrayMap$1.colGetSize():0:0 -> toArray
    2:2:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0 -> toArray
    2:2:java.lang.Object[] toArray():0 -> toArray
    3:3:java.lang.Object[] androidx.collection.MapCollections.toArrayHelper(int):0:0 -> toArray
    3:3:java.lang.Object[] toArray():0 -> toArray
    4:4:java.lang.Object[] toArray(java.lang.Object[]):0:0 -> toArray
androidx.collection.SimpleArrayMap -> R8$$REMOVED$$CLASS$$3:
# {"id":"sourceFile","fileName":"SimpleArrayMap.java"}
androidx.concurrent.futures.AbstractResolvableFuture -> d.h:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.lang.Object value -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/d;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/g;"}
    boolean GENERATE_CANCELLATION_CAUSES -> d
    java.util.logging.Logger log -> e
    androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper ATOMIC_HELPER -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/a;"}
    java.lang.Object NULL -> g
    76:84:void androidx.arch.core.executor.TaskExecutor.<init>():0:0 -> <clinit>
    76:84:void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.<init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0 -> <clinit>
    76:84:void androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper.<init>():0 -> <clinit>
    76:84:void <clinit>():0 -> <clinit>
    85:99:void <clinit>():0:0 -> <clinit>
    4:18:java.lang.Object androidx.concurrent.futures.AbstractResolvableFuture.getUninterruptibly(java.util.concurrent.Future):0:0 -> a
    4:18:void addDoneString(java.lang.StringBuilder):0 -> a
    19:26:void addDoneString(java.lang.StringBuilder):0:0 -> a
    27:30:java.lang.String androidx.concurrent.futures.AbstractResolvableFuture.userObjectToString(java.lang.Object):0:0 -> a
    27:30:void addDoneString(java.lang.StringBuilder):0 -> a
    31:44:void addDoneString(java.lang.StringBuilder):0:0 -> a
    45:54:java.lang.Object androidx.concurrent.futures.AbstractResolvableFuture.getUninterruptibly(java.util.concurrent.Future):0:0 -> a
    45:54:void addDoneString(java.lang.StringBuilder):0 -> a
    55:89:void addDoneString(java.lang.StringBuilder):0:0 -> a
    1:6:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    1:6:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;)V"}
    7:15:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    7:15:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    16:24:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.unpark():0:0 -> b
    16:24:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0 -> b
    16:24:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    25:27:void androidx.concurrent.futures.AbstractResolvableFuture.releaseWaiters():0:0 -> b
    25:27:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    28:50:androidx.concurrent.futures.AbstractResolvableFuture$Listener androidx.concurrent.futures.AbstractResolvableFuture.clearListeners(androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> b
    28:50:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    51:52:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0:0 -> b
    53:64:void androidx.concurrent.futures.AbstractResolvableFuture.executeListener(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> b
    53:64:void complete(androidx.concurrent.futures.AbstractResolvableFuture):0 -> b
    31:40:java.util.concurrent.CancellationException androidx.concurrent.futures.AbstractResolvableFuture.cancellationExceptionWithCause(java.lang.String,java.lang.Throwable):0:0 -> c
    31:40:java.lang.Object getDoneValue(java.lang.Object):0 -> c
    41:41:java.lang.Object getDoneValue(java.lang.Object):0:0 -> c
    1:1:boolean cancel(boolean):0:0 -> cancel
    1:1:void removeWaiter(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;)V"}
    1:1:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> get
    1:1:java.lang.Object get():0 -> get
    2:2:java.lang.Object get():0:0 -> get
    3:3:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.setNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> get
    3:3:java.lang.Object get(long,java.util.concurrent.TimeUnit):0 -> get
    4:4:java.lang.Object get(long,java.util.concurrent.TimeUnit):0:0 -> get
    1:1:boolean isCancelled():0:0 -> isCancelled
    1:1:boolean isDone():0:0 -> isDone
    20:27:boolean androidx.concurrent.futures.AbstractResolvableFuture.isCancelled():0:0 -> toString
    20:27:java.lang.String toString():0 -> toString
    28:41:java.lang.String toString():0:0 -> toString
    42:77:java.lang.String androidx.concurrent.futures.AbstractResolvableFuture.pendingToString():0:0 -> toString
    42:77:java.lang.String toString():0 -> toString
    78:133:java.lang.String toString():0:0 -> toString
androidx.concurrent.futures.AbstractResolvableFuture$1 -> d.a:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    long androidx.tracing.Trace.sTraceTagApp -> a
    java.lang.reflect.Method androidx.tracing.Trace.sIsTagEnabledMethod -> b
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/d;)Z"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object) -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    boolean androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/g;Ld/g;)Z"}
    1:1:void kotlin.jvm.internal.Intrinsics.checkNotNullExpressionValue(java.lang.Object,java.lang.String):0:0 -> d
    3:4:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> e
    3:4:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
    5:89:java.lang.String kotlin.jvm.internal.Intrinsics.createParameterIsNullExceptionMessage(java.lang.String):0:0 -> e
    5:89:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0 -> e
    5:89:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
    90:97:void kotlin.jvm.internal.Intrinsics.throwParameterIsNullNPE(java.lang.String):0:0 -> e
    90:97:void kotlin.jvm.internal.Intrinsics.checkNotNullParameter(java.lang.Object,java.lang.String):0 -> e
    1:1:byte[] androidx.profileinstaller.Encoding.compress(byte[]):0:0 -> f
    1:1:boolean androidx.profileinstaller.BenchmarkOperation.deleteFilesRecursively(java.io.File):0:0 -> g
    void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter) -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ld/g;)V"}
    void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread) -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ljava/lang/Thread;)V"}
    30:34:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> j
    30:34:byte[] androidx.profileinstaller.Encoding.read(java.io.InputStream,int):0 -> j
    35:36:byte[] androidx.profileinstaller.Encoding.read(java.io.InputStream,int):0:0 -> j
    54:58:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    54:58:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;II)[B"}
    59:81:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> k
    82:86:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    82:86:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> k
    87:101:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> k
    102:106:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    102:106:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> k
    107:132:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> k
    133:137:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    133:137:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0 -> k
    138:142:byte[] androidx.profileinstaller.Encoding.readCompressed(java.io.InputStream,int,int):0:0 -> k
    1:1:long androidx.profileinstaller.Encoding.readUInt(java.io.InputStream,int):0:0 -> l
    7:43:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable,java.lang.String):0:0 -> m
    7:43:java.lang.Throwable kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/NullPointerException;)V"}
    1:1:void androidx.profileinstaller.Encoding.writeUInt(java.io.OutputStream,long,int):0:0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;JI)V"}
    1:1:void androidx.profileinstaller.Encoding.writeUInt16(java.io.OutputStream,int):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;I)V"}
androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper -> R8$$REMOVED$$CLASS$$4:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
androidx.concurrent.futures.AbstractResolvableFuture$Cancellation -> d.b:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.lang.Throwable cause -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_INTERRUPTED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/b;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Cancellation CAUSELESS_CANCELLED -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/b;"}
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(boolean,java.lang.Throwable):0:0 -> <init>
androidx.concurrent.futures.AbstractResolvableFuture$Failure -> d.c:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
androidx.concurrent.futures.AbstractResolvableFuture$Listener -> d.d:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    androidx.concurrent.futures.AbstractResolvableFuture$Listener next -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/d;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Listener TOMBSTONE -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/d;"}
    3:8:void androidx.concurrent.futures.AbstractResolvableFuture$Listener.<init>(java.lang.Runnable,java.util.concurrent.Executor):0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
androidx.concurrent.futures.AbstractResolvableFuture$SafeAtomicHelper -> d.e:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterThreadUpdater -> c
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waiterNextUpdater -> d
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater waitersUpdater -> e
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater listenersUpdater -> f
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater valueUpdater -> g
    1:1:void androidx.arch.core.executor.TaskExecutor.<init>():0:0 -> <init>
    1:1:void androidx.concurrent.futures.AbstractResolvableFuture$AtomicHelper.<init>(androidx.concurrent.futures.AbstractResolvableFuture$1):0 -> <init>
    1:1:void <init>(java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater,java.util.concurrent.atomic.AtomicReferenceFieldUpdater):0 -> <init>
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/d;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/g;Ld/g;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ld/g;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$SynchronizedHelper -> d.f:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    1:1:boolean casListeners(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Listener,androidx.concurrent.futures.AbstractResolvableFuture$Listener):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/d;)Z"}
    1:1:boolean casValue(androidx.concurrent.futures.AbstractResolvableFuture,java.lang.Object,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ljava/lang/Object;Ljava/lang/Object;)Z"}
    1:1:boolean casWaiters(androidx.concurrent.futures.AbstractResolvableFuture,androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/h;Ld/g;Ld/g;)Z"}
    1:1:void putNext(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,androidx.concurrent.futures.AbstractResolvableFuture$Waiter):0:0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ld/g;)V"}
    1:1:void putThread(androidx.concurrent.futures.AbstractResolvableFuture$Waiter,java.lang.Thread):0:0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ld/g;Ljava/lang/Thread;)V"}
androidx.concurrent.futures.AbstractResolvableFuture$Waiter -> d.g:
# {"id":"sourceFile","fileName":"AbstractResolvableFuture.java"}
    java.lang.Thread thread -> a
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter next -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/g;"}
    androidx.concurrent.futures.AbstractResolvableFuture$Waiter TOMBSTONE -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/g;"}
    3:8:void androidx.concurrent.futures.AbstractResolvableFuture$Waiter.<init>(boolean):0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:void <init>():0:0 -> <init>
androidx.concurrent.futures.ResolvableFuture -> d.i:
# {"id":"sourceFile","fileName":"ResolvableFuture.java"}
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
# {"id":"sourceFile","fileName":"CoreComponentFactory.java"}
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
# {"id":"sourceFile","fileName":"RemoteActionCompat.java"}
    androidx.core.graphics.drawable.IconCompat mIcon -> a
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mContentDescription -> c
    android.app.PendingIntent mActionIntent -> d
    boolean mEnabled -> e
    boolean mShouldShowIcon -> f
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
# {"id":"sourceFile","fileName":"RemoteActionCompatParcelizer.java"}
    9:15:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    9:15:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)Landroidx/core/app/RemoteActionCompat;"}
    16:19:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> read
    16:19:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    20:26:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    27:36:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    27:36:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    37:51:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> read
    37:51:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0 -> read
    37:51:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    52:61:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0:0 -> read
    52:61:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    62:76:java.lang.CharSequence androidx.versionedparcelable.VersionedParcelParcel.readCharSequence():0:0 -> read
    62:76:java.lang.CharSequence androidx.versionedparcelable.VersionedParcel.readCharSequence(java.lang.CharSequence,int):0 -> read
    62:76:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    77:87:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    88:98:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    88:98:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    99:114:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> read
    99:114:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0 -> read
    99:114:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    115:123:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0:0 -> read
    115:123:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    124:137:boolean androidx.versionedparcelable.VersionedParcelParcel.readBoolean():0:0 -> read
    124:137:boolean androidx.versionedparcelable.VersionedParcel.readBoolean(boolean,int):0 -> read
    124:137:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    7:12:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int):0:0 -> write
    7:12:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/app/RemoteActionCompat;Lj/b;)V"}
    13:15:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    16:21:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    16:21:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    22:27:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    22:27:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    22:27:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    28:30:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    31:33:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0:0 -> write
    31:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    34:36:void androidx.versionedparcelable.VersionedParcelParcel.writeCharSequence(java.lang.CharSequence):0:0 -> write
    34:36:void androidx.versionedparcelable.VersionedParcel.writeCharSequence(java.lang.CharSequence,int):0 -> write
    34:36:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    37:39:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    40:42:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    40:42:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    43:45:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    43:45:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    43:45:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    46:48:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    49:51:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    49:51:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    52:54:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    52:54:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    52:54:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    55:57:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    58:60:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0:0 -> write
    58:60:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    61:64:void androidx.versionedparcelable.VersionedParcelParcel.writeBoolean(boolean):0:0 -> write
    61:64:void androidx.versionedparcelable.VersionedParcel.writeBoolean(boolean,int):0 -> write
    61:64:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.content.ContextCompat -> R8$$REMOVED$$CLASS$$5:
# {"id":"sourceFile","fileName":"ContextCompat.java"}
androidx.core.content.FileProvider -> e.c:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    java.lang.Object mLock -> a
    java.lang.String mAuthority -> b
    androidx.core.content.FileProvider$PathStrategy mLocalPathStrategy -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Le/b;"}
    int mResourceId -> d
    java.lang.String[] COLUMNS -> e
    java.io.File DEVICE_ROOT -> f
    java.util.HashMap sCache -> g
    1:1:void <clinit>():0:0 -> <clinit>
    1:14:void androidx.core.content.FileProvider.<init>(int):0:0 -> <init>
    1:14:void <init>():0 -> <init>
    1:32:java.lang.String androidx.core.content.FileProvider.removeTrailingSlash(java.lang.String):0:0 -> a
    1:32:java.lang.String access$000(java.lang.String):0 -> a
    1:1:void attachInfo(android.content.Context,android.content.pm.ProviderInfo):0:0 -> attachInfo
    14:34:androidx.core.content.FileProvider$PathStrategy getLocalPathStrategy():0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Le/b;"}
    35:40:java.lang.Object androidx.core.util.ObjectsCompat.requireNonNull(java.lang.Object,java.lang.String):0:0 -> b
    35:40:androidx.core.content.FileProvider$PathStrategy getLocalPathStrategy():0 -> b
    41:42:androidx.core.content.FileProvider$PathStrategy getLocalPathStrategy():0:0 -> b
    1:1:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;I)Le/b;"}
    18:46:android.content.res.XmlResourceParser androidx.core.content.FileProvider.getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int):0:0 -> d
    18:46:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Ljava/lang/String;I)Le/b;"}
    47:131:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0:0 -> d
    132:135:java.io.File[] androidx.core.content.ContextCompat.getExternalFilesDirs(android.content.Context,java.lang.String):0:0 -> d
    132:135:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0 -> d
    136:149:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0:0 -> d
    150:153:java.io.File[] androidx.core.content.ContextCompat.getExternalCacheDirs(android.content.Context):0:0 -> d
    150:153:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0 -> d
    154:182:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0:0 -> d
    183:192:java.io.File androidx.core.content.FileProvider.buildPath(java.io.File,java.lang.String[]):0:0 -> d
    183:192:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0 -> d
    193:239:void androidx.core.content.FileProvider$SimplePathStrategy.addRoot(java.lang.String,java.io.File):0:0 -> d
    193:239:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0 -> d
    240:267:android.content.res.XmlResourceParser androidx.core.content.FileProvider.getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int):0:0 -> d
    240:267:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int):0 -> d
    1:1:int delete(android.net.Uri,java.lang.String,java.lang.String[]):0:0 -> delete
    1:1:java.lang.String getType(android.net.Uri):0:0 -> getType
    1:1:java.lang.String getTypeAnonymous(android.net.Uri):0:0 -> getTypeAnonymous
    1:1:android.net.Uri insert(android.net.Uri,android.content.ContentValues):0:0 -> insert
    1:1:boolean onCreate():0:0 -> onCreate
    11:91:int androidx.core.content.FileProvider.modeToMode(java.lang.String):0:0 -> openFile
    11:91:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String):0 -> openFile
    92:96:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String):0:0 -> openFile
    1:1:java.lang.String[] androidx.core.content.FileProvider.copyOf(java.lang.String[],int):0:0 -> query
    1:1:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0 -> query
    2:2:java.lang.Object[] androidx.core.content.FileProvider.copyOf(java.lang.Object[],int):0:0 -> query
    2:2:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0 -> query
    3:3:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String):0:0 -> query
    1:1:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]):0:0 -> update
androidx.core.content.FileProvider$Api21Impl -> e.a:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    1:1:java.io.File[] getExternalMediaDirs(android.content.Context):0:0 -> a
androidx.core.content.FileProvider$SimplePathStrategy -> e.b:
# {"id":"sourceFile","fileName":"FileProvider.java"}
    java.util.HashMap mRoots -> a
    1:1:void <init>(java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    56:91:boolean androidx.core.content.FileProvider$SimplePathStrategy.belongsToRoot(java.lang.String,java.lang.String):0:0 -> a
    56:91:java.io.File getFileForUri(android.net.Uri):0 -> a
    92:140:java.io.File getFileForUri(android.net.Uri):0:0 -> a
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    int mType -> a
    java.lang.Object mObj1 -> b
    byte[] mData -> c
    android.os.Parcelable mParcelable -> d
    int mInt1 -> e
    int mInt2 -> f
    android.content.res.ColorStateList mTintList -> g
    android.graphics.PorterDuff$Mode mTintMode -> h
    java.lang.String mTintModeStr -> i
    java.lang.String mString1 -> j
    android.graphics.PorterDuff$Mode DEFAULT_TINT_MODE -> k
    45:131:java.lang.String toString():0:0 -> toString
    132:176:int androidx.core.graphics.drawable.IconCompat$Api23Impl.getResId(java.lang.Object):0:0 -> toString
    132:176:int getResId():0 -> toString
    132:176:java.lang.String toString():0 -> toString
    177:192:java.lang.String toString():0:0 -> toString
    193:214:int getResId():0:0 -> toString
    193:214:java.lang.String toString():0 -> toString
    215:284:java.lang.String toString():0:0 -> toString
androidx.core.graphics.drawable.IconCompat$Api23Impl -> R8$$REMOVED$$CLASS$$6:
# {"id":"sourceFile","fileName":"IconCompat.java"}
androidx.core.graphics.drawable.IconCompat$Api28Impl -> f.a:
# {"id":"sourceFile","fileName":"IconCompat.java"}
    1:1:int getResId(java.lang.Object):0:0 -> a
    1:1:java.lang.String getResPackage(java.lang.Object):0:0 -> b
    1:1:int getType(java.lang.Object):0:0 -> c
    1:1:android.net.Uri getUri(java.lang.Object):0:0 -> d
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
# {"id":"sourceFile","fileName":"IconCompatParcelizer.java"}
    9:18:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0:0 -> read
    9:18:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/b;)Landroidx/core/graphics/drawable/IconCompat;"}
    19:29:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> read
    19:29:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0 -> read
    19:29:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    30:39:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0:0 -> read
    30:39:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    40:60:byte[] androidx.versionedparcelable.VersionedParcelParcel.readByteArray():0:0 -> read
    40:60:byte[] androidx.versionedparcelable.VersionedParcel.readByteArray(byte[],int):0 -> read
    40:60:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    61:69:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    70:79:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0:0 -> read
    70:79:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    80:90:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> read
    80:90:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0 -> read
    80:90:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    91:100:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0:0 -> read
    91:100:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    101:111:int androidx.versionedparcelable.VersionedParcelParcel.readInt():0:0 -> read
    101:111:int androidx.versionedparcelable.VersionedParcel.readInt(int,int):0 -> read
    101:111:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    112:122:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0:0 -> read
    123:132:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    123:132:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    133:144:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> read
    133:144:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0 -> read
    133:144:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    145:153:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0:0 -> read
    145:153:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    154:163:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> read
    154:163:java.lang.String androidx.versionedparcelable.VersionedParcel.readString(java.lang.String,int):0 -> read
    154:163:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    164:250:void androidx.core.graphics.drawable.IconCompat.onPostParceling():0:0 -> read
    164:250:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel):0 -> read
    4:5:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    4:5:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/core/graphics/drawable/IconCompat;Lj/b;)V"}
    6:64:void androidx.core.graphics.drawable.IconCompat.onPreParceling(boolean):0:0 -> write
    6:64:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    65:70:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    71:76:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    71:76:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    77:81:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    77:81:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    77:81:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    82:86:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    87:92:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0:0 -> write
    87:92:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    93:101:void androidx.versionedparcelable.VersionedParcelParcel.writeByteArray(byte[]):0:0 -> write
    93:101:void androidx.versionedparcelable.VersionedParcel.writeByteArray(byte[],int):0 -> write
    93:101:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    102:107:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    108:113:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    108:113:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    114:118:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    114:118:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    114:118:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    119:123:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    124:129:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    124:129:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    130:134:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    130:134:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    130:134:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    135:139:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    140:145:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0:0 -> write
    140:145:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    146:150:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> write
    146:150:void androidx.versionedparcelable.VersionedParcel.writeInt(int,int):0 -> write
    146:150:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    151:155:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    156:161:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0:0 -> write
    156:161:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    162:166:void androidx.versionedparcelable.VersionedParcelParcel.writeParcelable(android.os.Parcelable):0:0 -> write
    162:166:void androidx.versionedparcelable.VersionedParcel.writeParcelable(android.os.Parcelable,int):0 -> write
    162:166:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    167:171:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    172:177:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    172:177:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    178:182:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    178:182:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    178:182:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    183:188:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0:0 -> write
    189:193:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0:0 -> write
    189:193:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
    194:200:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> write
    194:200:void androidx.versionedparcelable.VersionedParcel.writeString(java.lang.String,int):0 -> write
    194:200:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel):0 -> write
androidx.core.util.ObjectsCompat -> R8$$REMOVED$$CLASS$$7:
# {"id":"sourceFile","fileName":"ObjectsCompat.java"}
androidx.lifecycle.DefaultLifecycleObserver -> androidx.lifecycle.DefaultLifecycleObserver:
# {"id":"sourceFile","fileName":"DefaultLifecycleObserver.kt"}
androidx.lifecycle.EmptyActivityLifecycleCallbacks -> androidx.lifecycle.a:
# {"id":"sourceFile","fileName":"EmptyActivityLifecycleCallbacks.kt"}
androidx.lifecycle.Lifecycle -> androidx.lifecycle.f:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.d:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    androidx.lifecycle.Lifecycle$Event[] $VALUES -> $VALUES
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event$Companion Companion -> Companion
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/b;"}
    androidx.lifecycle.Lifecycle$Event ON_ANY -> ON_ANY
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_CREATE -> ON_CREATE
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_DESTROY -> ON_DESTROY
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_PAUSE -> ON_PAUSE
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_RESUME -> ON_RESUME
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_START -> ON_START
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    androidx.lifecycle.Lifecycle$Event ON_STOP -> ON_STOP
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/d;"}
    6:10:void <init>(java.lang.String,int):0:0 -> <clinit>
    6:10:void <clinit>():0 -> <clinit>
    11:15:void <clinit>():0:0 -> <clinit>
    16:20:void <init>(java.lang.String,int):0:0 -> <clinit>
    16:20:void <clinit>():0 -> <clinit>
    21:25:void <clinit>():0:0 -> <clinit>
    26:30:void <init>(java.lang.String,int):0:0 -> <clinit>
    26:30:void <clinit>():0 -> <clinit>
    31:35:void <clinit>():0:0 -> <clinit>
    36:40:void <init>(java.lang.String,int):0:0 -> <clinit>
    36:40:void <clinit>():0 -> <clinit>
    41:45:void <clinit>():0:0 -> <clinit>
    46:50:void <init>(java.lang.String,int):0:0 -> <clinit>
    46:50:void <clinit>():0 -> <clinit>
    51:55:void <clinit>():0:0 -> <clinit>
    56:60:void <init>(java.lang.String,int):0:0 -> <clinit>
    56:60:void <clinit>():0 -> <clinit>
    61:65:void <clinit>():0:0 -> <clinit>
    66:89:void <init>(java.lang.String,int):0:0 -> <clinit>
    66:89:void <clinit>():0 -> <clinit>
    90:91:void <clinit>():0:0 -> <clinit>
    92:97:void androidx.lifecycle.Lifecycle$Event$Companion.<init>():0:0 -> <clinit>
    92:97:void androidx.lifecycle.Lifecycle$Event$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <clinit>
    92:97:void <clinit>():0 -> <clinit>
androidx.lifecycle.Lifecycle$Event$Companion -> androidx.lifecycle.b:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
androidx.lifecycle.Lifecycle$Event$WhenMappings -> androidx.lifecycle.c:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    int[] $EnumSwitchMapping$0 -> a
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.e:
# {"id":"sourceFile","fileName":"Lifecycle.kt"}
    androidx.lifecycle.Lifecycle$State DESTROYED -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State INITIALIZED -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State CREATED -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State STARTED -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State RESUMED -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    androidx.lifecycle.Lifecycle$State[] $VALUES -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Landroidx/lifecycle/e;"}
    6:10:void <init>(java.lang.String,int):0:0 -> <clinit>
    6:10:void <clinit>():0 -> <clinit>
    11:15:void <clinit>():0:0 -> <clinit>
    16:20:void <init>(java.lang.String,int):0:0 -> <clinit>
    16:20:void <clinit>():0 -> <clinit>
    21:25:void <clinit>():0:0 -> <clinit>
    26:30:void <init>(java.lang.String,int):0:0 -> <clinit>
    26:30:void <clinit>():0 -> <clinit>
    31:35:void <clinit>():0:0 -> <clinit>
    36:40:void <init>(java.lang.String,int):0:0 -> <clinit>
    36:40:void <clinit>():0 -> <clinit>
    41:45:void <clinit>():0:0 -> <clinit>
    46:66:void <init>(java.lang.String,int):0:0 -> <clinit>
    46:66:void <clinit>():0 -> <clinit>
androidx.lifecycle.LifecycleDispatcher -> androidx.lifecycle.h:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    java.util.concurrent.atomic.AtomicBoolean initialized -> a
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback -> androidx.lifecycle.g:
# {"id":"sourceFile","fileName":"LifecycleDispatcher.kt"}
    16:18:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0:0 -> onActivityCreated
    16:18:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    19:26:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.registerIn(android.app.Activity):0:0 -> onActivityCreated
    19:26:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0 -> onActivityCreated
    19:26:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    27:58:void androidx.lifecycle.ReportFragment$Companion.injectIfNeededIn(android.app.Activity):0:0 -> onActivityCreated
    27:58:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
androidx.lifecycle.LifecycleOwner -> androidx.lifecycle.i:
# {"id":"sourceFile","fileName":"LifecycleOwner.kt"}
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.k:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    boolean enforceMainThread -> a
    androidx.arch.core.internal.FastSafeIterableMap observerMap -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lb/a;"}
    androidx.lifecycle.Lifecycle$State state -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/e;"}
    java.lang.ref.WeakReference lifecycleOwner -> d
    boolean handlingEvent -> e
    kotlinx.coroutines.flow.MutableStateFlow _currentStateFlow -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lu/a;"}
    6:16:void androidx.lifecycle.Lifecycle.<init>():0:0 -> <init>
    6:16:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0 -> <init>
    6:16:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/i;)V"}
    17:39:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0:0 -> <init>
    17:39:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    40:47:kotlinx.coroutines.flow.MutableStateFlow kotlinx.coroutines.flow.StateFlowKt.MutableStateFlow(java.lang.Object):0:0 -> <init>
    40:47:void <init>(androidx.lifecycle.LifecycleOwner,boolean):0 -> <init>
    40:47:void <init>(androidx.lifecycle.LifecycleOwner):0 -> <init>
    10:13:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> a
    10:13:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;)V"}
    14:15:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0:0 -> a
    14:15:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    14:15:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(2)"]}
    16:18:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0:0 -> a
    16:18:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    16:18:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    19:35:boolean androidx.arch.core.executor.DefaultTaskExecutor.isMainThread():0:0 -> a
    19:35:boolean androidx.arch.core.executor.ArchTaskExecutor.isMainThread():0 -> a
    19:35:void enforceMainThreadIfNeeded(java.lang.String):0 -> a
    19:35:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    36:45:void enforceMainThreadIfNeeded(java.lang.String):0:0 -> a
    36:45:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    46:105:androidx.lifecycle.Lifecycle$State androidx.lifecycle.Lifecycle$Event.getTargetState():0:0 -> a
    46:105:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    106:156:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    106:156:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    157:166:void sync():0:0 -> a
    157:166:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    157:166:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    167:173:boolean isSynced():0:0 -> a
    167:173:void sync():0 -> a
    167:173:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    167:173:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    174:180:void sync():0:0 -> a
    174:180:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    174:180:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    181:190:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    181:190:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    181:190:void sync():0 -> a
    181:190:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    181:190:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    191:196:boolean kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object,java.lang.Object):0:0 -> a
    191:196:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0 -> a
    191:196:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    191:196:void sync():0 -> a
    191:196:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    191:196:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    197:243:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    197:243:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    197:243:void sync():0 -> a
    197:243:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    197:243:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    244:251:void moveToState(androidx.lifecycle.Lifecycle$State):0:0 -> a
    244:251:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    252:253:boolean kotlinx.coroutines.flow.StateFlowImpl.updateState(java.lang.Object,java.lang.Object):0:0 -> a
    252:253:void kotlinx.coroutines.flow.StateFlowImpl.setValue(java.lang.Object):0 -> a
    252:253:void sync():0 -> a
    252:253:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    252:253:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
    254:262:void sync():0:0 -> a
    254:262:void moveToState(androidx.lifecycle.Lifecycle$State):0 -> a
    254:262:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event):0 -> a
androidx.lifecycle.LifecycleRegistry$Companion -> androidx.lifecycle.j:
# {"id":"sourceFile","fileName":"LifecycleRegistry.kt"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:6:void <init>():0:0 -> <init>
    1:6:void $r8$init$synthetic(int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    10:14:void androidx.profileinstaller.ProfileInstaller$2.onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    10:14:void androidx.profileinstaller.ProfileInstaller$1.onDiagnosticReceived$bridge(int,java.lang.Object):0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    53:62:void androidx.profileinstaller.ProfileInstaller$2.onResultReceived(int,java.lang.Object):0:0 -> b
    53:62:void androidx.profileinstaller.ProfileInstaller$1.onResultReceived$bridge(int,java.lang.Object):0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.getkeepsafe.relinker.ApkLibraryInstaller.closeSilently(java.io.Closeable):0:0 -> c
    19:28:void androidx.lifecycle.ReportFragment$Companion.dispatch$lifecycle_runtime_release(android.app.Activity,androidx.lifecycle.Lifecycle$Event):0:0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/d;)V"}
    1:1:void com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry.<init>(java.util.zip.ZipFile,java.util.zip.ZipEntry):0:0 -> e
    1:1:com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry com.getkeepsafe.relinker.ApkLibraryInstaller.findAPKWithLibrary(android.content.Context,java.lang.String[],java.lang.String,com.getkeepsafe.relinker.ReLinkerInstance):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;[Ljava/lang/String;Ljava/lang/String;Lk/c;)Lk/a;"}
    2:2:com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry com.getkeepsafe.relinker.ApkLibraryInstaller.findAPKWithLibrary(android.content.Context,java.lang.String[],java.lang.String,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> e
    1:1:java.lang.String[] com.getkeepsafe.relinker.ApkLibraryInstaller.getSupportedABIs(android.content.Context,java.lang.String):0:0 -> f
    1:1:java.lang.String com.getkeepsafe.relinker.SystemLibraryLoader.mapLibraryName(java.lang.String):0:0 -> g
    1:1:java.lang.String[] com.getkeepsafe.relinker.ApkLibraryInstaller.sourceDirectories(android.content.Context):0:0 -> h
androidx.lifecycle.ProcessLifecycleInitializer -> androidx.lifecycle.ProcessLifecycleInitializer:
# {"id":"sourceFile","fileName":"ProcessLifecycleInitializer.kt"}
    3:14:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> a
    3:14:java.lang.Object create(android.content.Context):0 -> a
    15:24:boolean androidx.startup.AppInitializer.isEagerlyInitialized(java.lang.Class):0:0 -> a
    15:24:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    15:24:java.lang.Object create(android.content.Context):0 -> a
    25:52:void androidx.lifecycle.LifecycleDispatcher.init(android.content.Context):0:0 -> a
    25:52:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    25:52:java.lang.Object create(android.content.Context):0 -> a
    53:54:androidx.lifecycle.ProcessLifecycleOwner androidx.lifecycle.ProcessLifecycleOwner.access$getNewInstance$cp():0:0 -> a
    53:54:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> a
    53:54:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    53:54:java.lang.Object create(android.content.Context):0 -> a
    55:57:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0:0 -> a
    55:57:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    55:57:java.lang.Object create(android.content.Context):0 -> a
    58:88:void androidx.lifecycle.ProcessLifecycleOwner.attach$lifecycle_process_release(android.content.Context):0:0 -> a
    58:88:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> a
    58:88:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    58:88:java.lang.Object create(android.content.Context):0 -> a
    89:97:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> a
    89:97:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> a
    89:97:void androidx.lifecycle.ProcessLifecycleOwner.attach$lifecycle_process_release(android.content.Context):0 -> a
    89:97:void androidx.lifecycle.ProcessLifecycleOwner$Companion.init$lifecycle_process_release(android.content.Context):0 -> a
    89:97:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    89:97:java.lang.Object create(android.content.Context):0 -> a
    98:106:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> a
    98:106:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> a
    98:106:void androidx.lifecycle.LifecycleDispatcher.init(android.content.Context):0 -> a
    98:106:androidx.lifecycle.LifecycleOwner create(android.content.Context):0 -> a
    98:106:java.lang.Object create(android.content.Context):0 -> a
    107:118:androidx.lifecycle.LifecycleOwner create(android.content.Context):0:0 -> a
    107:118:java.lang.Object create(android.content.Context):0 -> a
    1:1:java.util.List dependencies():0:0 -> b
androidx.lifecycle.ProcessLifecycleOwner -> androidx.lifecycle.p:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    int startedCounter -> a
    int resumedCounter -> b
    boolean pauseSent -> c
    boolean stopSent -> d
    android.os.Handler handler -> e
    androidx.lifecycle.LifecycleRegistry registry -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/k;"}
    java.lang.Runnable delayedPauseRunnable -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/j;"}
    androidx.lifecycle.ReportFragment$ActivityInitializationListener initializationListener -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/o;"}
    androidx.lifecycle.ProcessLifecycleOwner newInstance -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/p;"}
    30:33:void activityResumed$lifecycle_process_release():0:0 -> a
    34:43:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> a
    34:43:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> a
    34:43:void activityResumed$lifecycle_process_release():0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl -> androidx.lifecycle.l:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    1:1:void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> a
androidx.lifecycle.ProcessLifecycleOwner$Companion -> R8$$REMOVED$$CLASS$$8:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
androidx.lifecycle.ProcessLifecycleOwner$attach$1 -> androidx.lifecycle.n:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/p;"}
    14:29:androidx.lifecycle.ReportFragment androidx.lifecycle.ReportFragment$Companion.get(android.app.Activity):0:0 -> onActivityCreated
    14:29:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    30:31:androidx.lifecycle.ReportFragment$ActivityInitializationListener androidx.lifecycle.ProcessLifecycleOwner.access$getInitializationListener$p(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> onActivityCreated
    30:31:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    32:34:void androidx.lifecycle.ReportFragment.setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0:0 -> onActivityCreated
    32:34:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    35:46:void kotlin.jvm.internal.Intrinsics.throwJavaNpe(java.lang.String):0:0 -> onActivityCreated
    35:46:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object,java.lang.String):0 -> onActivityCreated
    35:46:androidx.lifecycle.ReportFragment androidx.lifecycle.ReportFragment$Companion.get(android.app.Activity):0 -> onActivityCreated
    35:46:void onActivityCreated(android.app.Activity,android.os.Bundle):0 -> onActivityCreated
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0:0 -> onActivityPaused
    8:11:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:27:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0:0 -> onActivityPaused
    12:27:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    28:37:void kotlin.jvm.internal.Intrinsics.throwJavaNpe():0:0 -> onActivityPaused
    28:37:void kotlin.jvm.internal.Intrinsics.checkNotNull(java.lang.Object):0 -> onActivityPaused
    28:37:void androidx.lifecycle.ProcessLifecycleOwner.activityPaused$lifecycle_process_release():0 -> onActivityPaused
    28:37:void onActivityPaused(android.app.Activity):0 -> onActivityPaused
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0:0 -> onActivityStopped
    8:11:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:15:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0:0 -> onActivityStopped
    12:15:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
    16:30:void androidx.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded$lifecycle_process_release():0:0 -> onActivityStopped
    16:30:void androidx.lifecycle.ProcessLifecycleOwner.activityStopped$lifecycle_process_release():0 -> onActivityStopped
    16:30:void onActivityStopped(android.app.Activity):0 -> onActivityStopped
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1 -> androidx.lifecycle.m:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/p;"}
    8:11:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onActivityPostStarted
    8:11:void onActivityPostStarted(android.app.Activity):0 -> onActivityPostStarted
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    12:30:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onActivityPostStarted
    12:30:void onActivityPostStarted(android.app.Activity):0 -> onActivityPostStarted
androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1 -> androidx.lifecycle.o:
# {"id":"sourceFile","fileName":"ProcessLifecycleOwner.kt"}
    androidx.lifecycle.ProcessLifecycleOwner this$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/p;"}
androidx.lifecycle.ReportFragment -> androidx.lifecycle.t:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    androidx.lifecycle.ReportFragment$ActivityInitializationListener processListener -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/o;"}
    int $r8$clinit -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void dispatch(androidx.lifecycle.Lifecycle$Event):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroidx/lifecycle/d;)V"}
    8:14:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onResume():0:0 -> onResume
    8:14:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onResume
    8:14:void onResume():0 -> onResume
    15:18:void onResume():0:0 -> onResume
    8:13:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onStart
    8:13:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onStart():0 -> onStart
    8:13:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    8:13:void onStart():0 -> onStart
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(3)"]}
    14:33:void androidx.lifecycle.ProcessLifecycleOwner.activityStarted$lifecycle_process_release():0:0 -> onStart
    14:33:void androidx.lifecycle.ProcessLifecycleOwner$initializationListener$1.onStart():0 -> onStart
    14:33:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener):0 -> onStart
    14:33:void onStart():0 -> onStart
    34:37:void onStart():0:0 -> onStart
androidx.lifecycle.ReportFragment$Companion -> R8$$REMOVED$$CLASS$$9:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
androidx.lifecycle.ReportFragment$LifecycleCallbacks -> androidx.lifecycle.s:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
    androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion -> Companion
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/r;"}
    3:8:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.<init>():0:0 -> <clinit>
    3:8:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.<init>(kotlin.jvm.internal.DefaultConstructorMarker):0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    8:19:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion.registerIn(android.app.Activity):0:0 -> registerIn
    8:19:void registerIn(android.app.Activity):0 -> registerIn
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion -> androidx.lifecycle.r:
# {"id":"sourceFile","fileName":"ReportFragment.kt"}
androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$ExternalSyntheticApiModelOutline0 -> androidx.lifecycle.q:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$4.m(android.graphics.Insets):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$7.m(int,int,int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I)Landroid/graphics/Insets;"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$67794fd1c8ab5a462427a2fbe2bb4c3c6b829e00b33b77f88fa79eddd5c77c68$0.m(int,int,int,int,long):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(II)Landroid/media/ImageReader;"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$8$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(android.view.WindowInsets):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$9.m(android.view.WindowInsets$Builder):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$8$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$1.m():0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion$$InternalSyntheticApiModelOutline$1$697f715c7301ae348f7ba2ab082eb37b64d67d01fe586b84528231ac2d1ce45b$0.m(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/app/Activity;Landroidx/lifecycle/s;)V"}
androidx.profileinstaller.BenchmarkOperation -> R8$$REMOVED$$CLASS$$12:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper -> R8$$REMOVED$$CLASS$$10:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper -> R8$$REMOVED$$CLASS$$11:
# {"id":"sourceFile","fileName":"BenchmarkOperation.java"}
androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$ExternalSyntheticApiModelOutline0 -> g.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$2.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.content.Context androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper$$InternalSyntheticApiModelOutline$2$cb5cae3fa2bc2f683aac30a765a66d90fae1498f4b209d97105f03875c259c9b$0.m(android.content.Context):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$3.m(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$5.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$4.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.DeviceProfileWriter -> g.c:
# {"id":"sourceFile","fileName":"DeviceProfileWriter.java"}
    java.util.concurrent.Executor mExecutor -> a
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback mDiagnostics -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/g;"}
    byte[] mDesiredVersion -> c
    java.io.File mCurProfile -> d
    java.lang.String mApkName -> e
    boolean mDeviceSupportsAotProfile -> f
    androidx.profileinstaller.DexProfileData[] mProfile -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lg/d;"}
    byte[] mTranscodedProfile -> h
    1:1:void <init>(android.content.res.AssetManager,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,java.lang.String,java.lang.String,java.lang.String,java.io.File):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;La/a;Lg/g;Ljava/lang/String;Ljava/io/File;)V"}
    1:1:java.io.InputStream openStreamFromAssets(android.content.res.AssetManager,java.lang.String):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/io/FileInputStream;"}
    1:1:void result(int,java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/io/Serializable;)V"}
androidx.profileinstaller.DeviceProfileWriter$$ExternalSyntheticLambda0 -> g.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$1 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    java.lang.Object androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$2 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.f$0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.<init>(androidx.profileinstaller.DeviceProfileWriter,int,java.lang.Object):0:0 -> <init>
    1:1:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.$r8$init$synthetic(java.lang.Object,int,java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Object;ILjava/io/Serializable;I)V"}
    14:19:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> run
    14:19:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    20:26:void androidx.profileinstaller.DeviceProfileWriter.lambda$result$0(int,java.lang.Object):0:0 -> run
    20:26:void androidx.profileinstaller.DeviceProfileWriter$$InternalSyntheticLambda$2$ff8c5bd5af23f4910bcb3842df39c45d97ff518106242665abad96f9ce8992ee$0.run$bridge():0 -> run
androidx.profileinstaller.DexProfileData -> g.d:
# {"id":"sourceFile","fileName":"DexProfileData.java"}
    java.lang.String apkName -> a
    java.lang.String dexName -> b
    long dexChecksum -> c
    long mTypeIdCount -> d
    int classSetSize -> e
    int hotMethodRegionSize -> f
    int numMethodIds -> g
    int[] classes -> h
    java.util.TreeMap methods -> i
    1:1:void <init>(java.lang.String,java.lang.String,long,long,int,int,int,int[],java.util.TreeMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;Ljava/lang/String;JIII[ILjava/util/TreeMap;)V"}
androidx.profileinstaller.Encoding -> R8$$REMOVED$$CLASS$$13:
# {"id":"sourceFile","fileName":"Encoding.java"}
androidx.profileinstaller.FileSectionType -> R8$$REMOVED$$CLASS$$14:
# {"id":"sourceFile","fileName":"FileSectionType.java"}
androidx.profileinstaller.FileSectionType$EnumUnboxingLocalUtility -> g.e:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:long getMValue(int):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry$$InternalSyntheticThrowCCEIfNotNull$8$39bcf007ad50033f0d88ea0120ec4aba0ec4373e488ae755ae9b579ca183da81$0.m(java.lang.Object):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallReceiver -> androidx.profileinstaller.ProfileInstallReceiver:
# {"id":"sourceFile","fileName":"ProfileInstallReceiver.java"}
    70:92:void androidx.profileinstaller.ProfileInstaller.writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    70:92:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    93:106:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> onReceive
    93:106:void androidx.profileinstaller.ProfileInstaller.result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0 -> onReceive
    93:106:void androidx.profileinstaller.ProfileInstaller.writeSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    93:106:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    107:117:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    118:121:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    118:121:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    122:133:boolean androidx.profileinstaller.ProfileInstaller.deleteProfileWrittenFor(java.io.File):0:0 -> onReceive
    122:133:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    122:133:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    134:140:void androidx.profileinstaller.ProfileInstaller.lambda$result$0(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0:0 -> onReceive
    134:140:void androidx.profileinstaller.ProfileInstaller.result(java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,int,java.lang.Object):0 -> onReceive
    134:140:void androidx.profileinstaller.ProfileInstaller.deleteSkipFile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> onReceive
    134:140:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    141:157:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    158:175:void saveProfile(androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> onReceive
    158:175:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    176:210:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
    211:223:java.io.File androidx.profileinstaller.BenchmarkOperation$Api24ContextHelper.getDeviceProtectedCodeCacheDir(android.content.Context):0:0 -> onReceive
    211:223:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    211:223:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    224:228:java.io.File androidx.profileinstaller.BenchmarkOperation$Api21ContextHelper.getCodeCacheDir(android.content.Context):0:0 -> onReceive
    224:228:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0 -> onReceive
    224:228:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    229:249:void androidx.profileinstaller.BenchmarkOperation.dropShaderCache(android.content.Context,androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics):0:0 -> onReceive
    229:249:void onReceive(android.content.Context,android.content.Intent):0 -> onReceive
    250:253:void onReceive(android.content.Context,android.content.Intent):0:0 -> onReceive
androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics -> g.f:
# {"id":"sourceFile","fileName":"ProfileInstallReceiver.java"}
    int $r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallReceiver this$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    1:8:void androidx.profileinstaller.ProfileInstallReceiver$ResultDiagnostics.<init>(androidx.profileinstaller.ProfileInstallReceiver):0:0 -> <init>
    1:8:void $r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    5:8:void androidx.profileinstaller.ProfileInstaller$2.onDiagnosticReceived(int,java.lang.Object):0:0 -> a
    5:8:void onDiagnosticReceived(int,java.lang.Object):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    48:60:void androidx.profileinstaller.ProfileInstaller$2.onResultReceived(int,java.lang.Object):0:0 -> b
    48:60:void onResultReceived(int,java.lang.Object):0 -> b
    61:64:void onResultReceived(int,java.lang.Object):0:0 -> b
    11:34:java.lang.String kotlinx.coroutines.internal.Symbol.toString():0:0 -> toString
    11:34:java.lang.String kotlinx.coroutines.internal.Symbol.toString$bridge():0 -> toString
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstaller -> g.h:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback EMPTY_DIAGNOSTICS -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/j;"}
    byte[] androidx.profileinstaller.ProfileTranscoder.MAGIC_PROF -> b
    byte[] androidx.profileinstaller.ProfileTranscoder.MAGIC_PROFM -> c
    byte[] androidx.profileinstaller.ProfileVersion.V015_S -> d
    byte[] androidx.profileinstaller.ProfileVersion.V010_P -> e
    byte[] androidx.profileinstaller.ProfileVersion.V009_O_MR1 -> f
    byte[] androidx.profileinstaller.ProfileVersion.V005_O -> g
    byte[] androidx.profileinstaller.ProfileVersion.V001_N -> h
    byte[] androidx.profileinstaller.ProfileVersion.METADATA_V001_N -> i
    byte[] androidx.profileinstaller.ProfileVersion.METADATA_V002 -> j
    1:14:void androidx.profileinstaller.ProfileInstaller.<clinit>():0:0 -> <clinit>
    1:14:void g.ProfileInstaller.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
    15:29:void androidx.profileinstaller.ProfileTranscoder.<clinit>():0:0 -> <clinit>
    15:29:void g.ProfileInstaller.$r8$clinit$synthetic():0 -> <clinit>
    30:74:void androidx.profileinstaller.ProfileVersion.<clinit>():0:0 -> <clinit>
    30:74:void g.ProfileInstaller.$r8$clinit$synthetic():0 -> <clinit>
    17:25:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> a
    17:25:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"([Lg/d;[B)[B"}
    26:33:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    34:48:int androidx.profileinstaller.ProfileTranscoder.getMethodBitmapStorageSize(int):0:0 -> a
    34:48:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    49:77:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    78:89:void androidx.profileinstaller.ProfileTranscoder.writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> a
    78:89:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    90:114:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    115:126:void androidx.profileinstaller.ProfileTranscoder.writeLineData(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> a
    115:126:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    127:163:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    164:168:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> a
    164:168:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0 -> a
    169:169:byte[] androidx.profileinstaller.ProfileTranscoder.createCompressibleBody(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> a
    3:24:java.lang.String androidx.profileinstaller.ProfileVersion.dexKeySeparator(byte[]):0:0 -> b
    3:24:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    25:30:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> b
    31:54:java.lang.String androidx.profileinstaller.ProfileTranscoder.enforceSeparator(java.lang.String,java.lang.String):0:0 -> b
    31:54:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    55:91:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> b
    92:106:java.lang.String androidx.profileinstaller.ProfileVersion.dexKeySeparator(byte[]):0:0 -> b
    92:106:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    107:117:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0:0 -> b
    118:139:java.lang.String androidx.profileinstaller.ProfileTranscoder.enforceSeparator(java.lang.String,java.lang.String):0:0 -> b
    118:139:java.lang.String androidx.profileinstaller.ProfileTranscoder.generateDexKey(java.lang.String,java.lang.String,byte[]):0 -> b
    26:30:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> c
    26:30:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0 -> c
    31:32:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0:0 -> c
    33:39:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> c
    33:39:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0 -> c
    40:40:int androidx.profileinstaller.ProfileTranscoder.methodFlagBitmapIndex(int,int,int):0:0 -> c
    1:1:void noteProfileWrittenFor(android.content.pm.PackageInfo,java.io.File):0:0 -> d
    8:13:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> e
    8:13:int[] androidx.profileinstaller.ProfileTranscoder.readClasses(java.io.InputStream,int):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;I)[I"}
    14:19:int[] androidx.profileinstaller.ProfileTranscoder.readClasses(java.io.InputStream,int):0:0 -> e
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;[B[B[Lg/d;)[Lg/d;"}
    2:2:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> f
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    3:3:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> f
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    5:5:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    7:7:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadata001(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    9:9:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    11:11:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> f
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    12:12:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> f
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    13:13:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    13:13:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    14:14:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    14:14:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    14:14:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    15:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002(java.io.InputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    15:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    16:16:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> f
    16:16:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0 -> f
    17:17:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMeta(java.io.InputStream,byte[],byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> f
    22:31:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> g
    22:31:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;I[Lg/d;)[Lg/d;"}
    32:33:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    34:44:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> g
    34:44:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
    45:76:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    77:83:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> g
    77:83:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
    84:85:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    86:92:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> g
    86:92:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0 -> g
    93:93:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataForNBody(java.io.InputStream,int,androidx.profileinstaller.DexProfileData[]):0:0 -> g
    1:1:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> h
    1:1:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;[BI[Lg/d;)[Lg/d;"}
    2:2:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> h
    2:2:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    3:3:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> h
    3:3:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    4:4:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> h
    4:4:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    5:5:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> h
    5:5:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    6:6:java.lang.String androidx.profileinstaller.ProfileTranscoder.extractKey(java.lang.String):0:0 -> h
    6:6:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0 -> h
    6:6:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    7:7:androidx.profileinstaller.DexProfileData androidx.profileinstaller.ProfileTranscoder.findByDexName(androidx.profileinstaller.DexProfileData[],java.lang.String):0:0 -> h
    7:7:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> h
    9:9:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> h
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> h
    11:11:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> h
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0 -> h
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readMetadataV002Body(java.io.InputStream,byte[],int,androidx.profileinstaller.DexProfileData[]):0:0 -> h
    10:15:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> i
    10:15:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/FileInputStream;[BLjava/lang/String;)[Lg/d;"}
    16:25:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> i
    16:25:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
    26:58:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> i
    59:65:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> i
    59:65:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
    66:66:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> i
    67:73:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> i
    67:73:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0 -> i
    74:74:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readProfile(java.io.InputStream,byte[],java.lang.String):0:0 -> i
    22:31:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    22:31:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayInputStream;Ljava/lang/String;I)[Lg/d;"}
    32:43:long androidx.profileinstaller.Encoding.readUInt32(java.io.InputStream):0:0 -> j
    32:43:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    44:45:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> j
    46:58:java.lang.String androidx.profileinstaller.Encoding.readString(java.io.InputStream,int):0:0 -> j
    46:58:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    59:85:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> j
    86:102:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    86:102:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    103:108:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    103:108:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    103:108:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    109:120:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    109:120:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    121:127:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    121:127:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    121:127:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    128:130:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    128:130:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    128:130:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    128:130:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    131:144:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> j
    131:144:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    131:144:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    131:144:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    145:147:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> j
    145:147:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    145:147:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    145:147:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    148:154:int androidx.profileinstaller.Encoding.readUInt8(java.io.InputStream):0:0 -> j
    148:154:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    148:154:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    148:154:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    155:166:int androidx.profileinstaller.Encoding.readUInt16(java.io.InputStream):0:0 -> j
    155:166:void androidx.profileinstaller.ProfileTranscoder.skipInlineCache(java.io.InputStream):0 -> j
    155:166:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    155:166:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    167:172:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    167:172:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    173:180:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0:0 -> j
    181:187:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    181:187:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    188:189:int androidx.profileinstaller.Encoding.bitsToBytes(int):0:0 -> j
    188:189:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    188:189:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    190:200:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    190:200:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    201:227:int androidx.profileinstaller.ProfileTranscoder.readFlagsFromBitmap(java.util.BitSet,int,int):0:0 -> j
    201:227:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    201:227:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    228:266:void androidx.profileinstaller.ProfileTranscoder.readMethodBitmap(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    228:266:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    267:273:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> j
    267:273:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0 -> j
    267:273:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    274:275:void androidx.profileinstaller.ProfileTranscoder.readHotMethodRegion(java.io.InputStream,androidx.profileinstaller.DexProfileData):0:0 -> j
    274:275:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.ProfileTranscoder.readUncompressedBody(java.io.InputStream,java.lang.String,int):0 -> j
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    1:1:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;[B[Lg/d;)Z"}
    2:2:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    2:2:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    2:2:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    2:2:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    3:3:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    3:3:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    3:3:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    3:3:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    3:3:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    4:4:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    4:4:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    4:4:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    4:4:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    5:5:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    5:5:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    5:5:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    5:5:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    5:5:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    6:6:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    6:6:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    6:6:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    6:6:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    7:7:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    7:7:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    7:7:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    7:7:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    7:7:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    8:8:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    8:8:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    8:8:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    8:8:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    9:9:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> k
    9:9:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    9:9:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    9:9:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    9:9:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    10:10:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    10:10:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    10:10:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    10:10:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    11:11:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> k
    11:11:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    11:11:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    11:11:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    11:11:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    12:12:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    12:12:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    12:12:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    12:12:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    13:13:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    13:13:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    13:13:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    14:14:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    14:14:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    14:14:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    14:14:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    15:15:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    15:15:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    15:15:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    16:16:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    16:16:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    16:16:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    16:16:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    17:17:int androidx.profileinstaller.ProfileTranscoder.computeMethodFlags(androidx.profileinstaller.DexProfileData):0:0 -> k
    17:17:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    17:17:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    17:17:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    17:17:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    18:18:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> k
    18:18:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    18:18:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    18:18:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    18:18:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    19:19:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> k
    19:19:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    19:19:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    19:19:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    19:19:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    20:20:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    20:20:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    20:20:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    20:20:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    21:21:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    21:21:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    21:21:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    21:21:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    21:21:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    22:22:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    22:22:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    22:22:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    22:22:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    23:23:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodsWithInlineCaches(androidx.profileinstaller.DexProfileData):0:0 -> k
    23:23:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    23:23:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    23:23:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    23:23:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    24:24:byte[] androidx.profileinstaller.ProfileTranscoder.createMethodBitmapRegion(androidx.profileinstaller.DexProfileData):0:0 -> k
    24:24:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    24:24:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    24:24:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    24:24:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    25:25:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    25:25:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    25:25:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    25:25:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    26:26:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    26:26:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    26:26:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    27:27:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    27:27:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    27:27:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    27:27:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    28:28:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    28:28:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    28:28:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    29:29:long androidx.profileinstaller.FileSectionType.getValue():0:0 -> k
    29:29:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    29:29:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    29:29:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    30:30:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    30:30:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    30:30:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    30:30:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    31:31:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    31:31:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    31:31:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    32:32:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    32:32:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    32:32:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    32:32:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    33:33:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    33:33:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    33:33:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    34:34:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    34:34:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    34:34:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    34:34:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    35:35:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    35:35:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    35:35:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    36:36:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    36:36:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    36:36:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    36:36:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    37:37:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    37:37:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    37:37:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    37:37:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    37:37:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    38:38:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleMethodsSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    38:38:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    38:38:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    38:38:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    39:39:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    39:39:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    39:39:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    39:39:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    40:40:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    40:40:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    40:40:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    40:40:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    40:40:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    41:41:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.createCompressibleClassSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    41:41:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    41:41:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    41:41:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    42:42:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    42:42:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    42:42:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    42:42:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    43:43:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> k
    43:43:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0 -> k
    43:43:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    43:43:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    43:43:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    44:44:androidx.profileinstaller.WritableFileSection androidx.profileinstaller.ProfileTranscoder.writeDexFileSection(androidx.profileinstaller.DexProfileData[]):0:0 -> k
    44:44:void androidx.profileinstaller.ProfileTranscoder.writeProfileSections(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    44:44:void androidx.profileinstaller.ProfileTranscoder.writeProfileForS(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    44:44:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    45:45:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    46:46:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    46:46:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    47:47:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> k
    47:47:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    47:47:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    48:48:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    48:48:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    48:48:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    49:49:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    49:49:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    49:49:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    49:49:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    50:50:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    50:50:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    50:50:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    51:51:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    51:51:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    51:51:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    51:51:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    52:52:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    52:52:void androidx.profileinstaller.ProfileTranscoder.writeProfileForP(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    52:52:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    53:53:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    54:54:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    54:54:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    55:55:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> k
    55:55:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    55:55:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    56:56:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    56:56:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    57:57:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> k
    57:57:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    57:57:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    58:58:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    58:58:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    59:59:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    59:59:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    59:59:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    60:60:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> k
    60:60:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    60:60:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    61:61:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    61:61:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    62:62:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    63:63:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    63:63:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    64:64:void androidx.profileinstaller.Encoding.writeUInt8(java.io.OutputStream,int):0:0 -> k
    64:64:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    64:64:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    65:65:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    65:65:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    65:65:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    66:66:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    66:66:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    66:66:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    66:66:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    67:67:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    67:67:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    67:67:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    68:68:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    68:68:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0 -> k
    68:68:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    68:68:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    69:69:void androidx.profileinstaller.Encoding.writeCompressed(java.io.OutputStream,byte[]):0:0 -> k
    69:69:void androidx.profileinstaller.ProfileTranscoder.writeProfileForO_MR1(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    69:69:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    70:70:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0:0 -> k
    71:71:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    71:71:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    72:72:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> k
    72:72:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    72:72:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    73:73:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    73:73:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    74:74:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> k
    74:74:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    74:74:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    75:75:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> k
    75:75:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0 -> k
    75:75:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    76:76:void androidx.profileinstaller.ProfileTranscoder.writeProfileForN(java.io.OutputStream,androidx.profileinstaller.DexProfileData[]):0:0 -> k
    76:76:boolean androidx.profileinstaller.ProfileTranscoder.transcodeAndWriteBody(java.io.OutputStream,byte[],androidx.profileinstaller.DexProfileData[]):0 -> k
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeClasses(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> l
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lg/d;)V"}
    1:7:int androidx.profileinstaller.Encoding.utf8Length(java.lang.String):0:0 -> m
    1:7:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lg/d;Ljava/lang/String;)V"}
    8:19:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> m
    20:27:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> m
    20:27:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
    28:30:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0:0 -> m
    31:33:void androidx.profileinstaller.Encoding.writeUInt32(java.io.OutputStream,long):0:0 -> m
    31:33:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
    34:41:void androidx.profileinstaller.Encoding.writeString(java.io.OutputStream,java.lang.String):0:0 -> m
    34:41:void androidx.profileinstaller.ProfileTranscoder.writeLineHeader(java.io.OutputStream,androidx.profileinstaller.DexProfileData,java.lang.String):0 -> m
    10:11:int androidx.profileinstaller.ProfileTranscoder.getMethodBitmapStorageSize(int):0:0 -> n
    10:11:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0 -> n
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lg/d;)V"}
    12:62:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> n
    63:100:void androidx.profileinstaller.ProfileTranscoder.setMethodBitmapBit(byte[],int,int,androidx.profileinstaller.DexProfileData):0:0 -> n
    63:100:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0 -> n
    101:104:void androidx.profileinstaller.ProfileTranscoder.writeMethodBitmap(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> n
    1:1:void androidx.profileinstaller.ProfileTranscoder.writeMethodsWithInlineCaches(java.io.OutputStream,androidx.profileinstaller.DexProfileData):0:0 -> o
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/ByteArrayOutputStream;Lg/d;)V"}
    1:1:boolean androidx.profileinstaller.ProfileInstaller.hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    1:1:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;La/a;Lg/g;Z)V"}
    2:2:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> p
    3:3:boolean androidx.profileinstaller.ProfileInstaller.hasAlreadyWrittenProfileForThisInstall(android.content.pm.PackageInfo,java.io.File,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    3:3:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    4:4:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> p
    5:5:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    5:5:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    6:6:boolean androidx.profileinstaller.DeviceProfileWriter.deviceAllowsProfileInstallerAotWrites():0:0 -> p
    6:6:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    6:6:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    7:7:java.io.InputStream androidx.profileinstaller.DeviceProfileWriter.getProfileInputStream(android.content.res.AssetManager):0:0 -> p
    7:7:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    7:7:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    7:7:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    8:8:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    8:8:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> p
    8:8:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    8:8:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    8:8:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    9:9:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> p
    9:9:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    9:9:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    9:9:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    10:10:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    10:10:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0 -> p
    10:10:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> p
    10:10:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    10:10:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    10:10:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    11:11:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    11:11:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0 -> p
    11:11:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    11:11:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    11:11:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    12:12:androidx.profileinstaller.DexProfileData[] androidx.profileinstaller.DeviceProfileWriter.readProfileInternal(java.io.InputStream):0:0 -> p
    12:12:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    12:12:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    12:12:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    13:13:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> p
    13:13:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    13:13:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    13:13:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    14:14:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    14:14:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> p
    14:14:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    14:14:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    14:14:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    15:15:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> p
    15:15:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    15:15:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    15:15:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    16:16:java.lang.RuntimeException androidx.profileinstaller.Encoding.error(java.lang.String):0:0 -> p
    16:16:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0 -> p
    16:16:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> p
    16:16:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    16:16:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    16:16:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    17:17:byte[] androidx.profileinstaller.ProfileTranscoder.readHeader(java.io.InputStream,byte[]):0:0 -> p
    17:17:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0 -> p
    17:17:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    17:17:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    17:17:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    18:18:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.addMetadata(androidx.profileinstaller.DexProfileData[],byte[]):0:0 -> p
    18:18:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.read():0 -> p
    18:18:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    18:18:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    19:19:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> p
    19:19:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    19:19:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    20:20:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    20:20:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> p
    20:20:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    20:20:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    21:21:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> p
    21:21:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    21:21:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    22:22:void androidx.profileinstaller.ProfileTranscoder.writeHeader(java.io.OutputStream,byte[]):0:0 -> p
    22:22:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> p
    22:22:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    22:22:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    23:23:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0:0 -> p
    23:23:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    23:23:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    24:24:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    24:24:androidx.profileinstaller.DeviceProfileWriter androidx.profileinstaller.DeviceProfileWriter.transcodeIfNeeded():0 -> p
    24:24:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    24:24:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    25:25:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    25:25:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    25:25:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    26:26:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    26:26:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> p
    26:26:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    26:26:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    27:27:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    27:27:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    27:27:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    28:28:void androidx.profileinstaller.Encoding.writeAll(java.io.InputStream,java.io.OutputStream):0:0 -> p
    28:28:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> p
    28:28:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    28:28:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    29:29:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    29:29:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    29:29:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    30:30:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> p
    30:30:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    31:31:boolean androidx.profileinstaller.DeviceProfileWriter.write():0:0 -> p
    31:31:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    31:31:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    32:32:void androidx.profileinstaller.DeviceProfileWriter.assertDeviceAllowsProfileInstallerAotWritesCalled():0:0 -> p
    32:32:boolean androidx.profileinstaller.DeviceProfileWriter.write():0 -> p
    32:32:boolean androidx.profileinstaller.ProfileInstaller.transcodeAndWrite(android.content.res.AssetManager,java.lang.String,android.content.pm.PackageInfo,java.io.File,java.lang.String,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0 -> p
    32:32:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0 -> p
    33:33:void writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback,boolean):0:0 -> p
androidx.profileinstaller.ProfileInstaller$1 -> R8$$REMOVED$$CLASS$$15:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
androidx.profileinstaller.ProfileInstaller$2 -> R8$$REMOVED$$CLASS$$16:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback -> g.g:
# {"id":"sourceFile","fileName":"ProfileInstaller.java"}
    void onDiagnosticReceived(int,java.lang.Object) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    void onResultReceived(int,java.lang.Object) -> b
androidx.profileinstaller.ProfileInstallerInitializer -> androidx.profileinstaller.ProfileInstallerInitializer:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    8:17:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> a
    8:17:java.lang.Object create(android.content.Context):0 -> a
    18:25:void delayAfterFirstFrame(android.content.Context):0:0 -> a
    18:25:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0 -> a
    18:25:java.lang.Object create(android.content.Context):0 -> a
    26:31:androidx.profileinstaller.ProfileInstallerInitializer$Result create(android.content.Context):0:0 -> a
    26:31:java.lang.Object create(android.content.Context):0 -> a
    1:1:java.util.List dependencies():0:0 -> b
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda0 -> g.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    androidx.profileinstaller.ProfileInstallerInitializer androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.f$1 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.<init>(androidx.profileinstaller.ProfileInstallerInitializer,android.content.Context):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    12:60:void androidx.profileinstaller.ProfileInstallerInitializer.installAfterDelay(android.content.Context):0:0 -> run
    12:60:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$delayAfterFirstFrame$0(android.content.Context):0 -> run
    12:60:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$1$0f795b3312dc1da540aed76dfe7be9153bc2dd822b10dd31dcd76fb9862960b5$0.run():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$$ExternalSyntheticLambda1 -> g.j:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    int androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.$r8$classId -> a
      # {"id":"com.android.tools.r8.synthesized"}
    android.content.Context androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.f$0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:8:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.<init>(android.content.Context):0:0 -> <init>
    1:8:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.$r8$init$synthetic(java.lang.Object,int):0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILjava/lang/Object;)V"}
    15:17:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0:0 -> run
    15:17:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
      # {"id":"com.android.tools.r8.synthesized"}
    18:30:void androidx.lifecycle.ProcessLifecycleOwner.dispatchPauseIfNeeded$lifecycle_process_release():0:0 -> run
    18:30:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0 -> run
    18:30:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    31:48:void androidx.lifecycle.ProcessLifecycleOwner.dispatchStopIfNeeded$lifecycle_process_release():0:0 -> run
    31:48:void androidx.lifecycle.ProcessLifecycleOwner.delayedPauseRunnable$lambda$0(androidx.lifecycle.ProcessLifecycleOwner):0 -> run
    31:48:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    49:57:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context):0:0 -> run
    49:57:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$writeInBackground$2(android.content.Context):0 -> run
    49:57:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    58:63:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context,java.util.concurrent.Executor,androidx.profileinstaller.ProfileInstaller$DiagnosticsCallback):0:0 -> run
    58:63:void androidx.profileinstaller.ProfileInstaller.writeProfile(android.content.Context):0 -> run
    58:63:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$writeInBackground$2(android.content.Context):0 -> run
    58:63:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
    64:90:void androidx.profileinstaller.ProfileInstallerInitializer.writeInBackground(android.content.Context):0:0 -> run
    64:90:void androidx.profileinstaller.ProfileInstallerInitializer.lambda$installAfterDelay$1(android.content.Context):0 -> run
    64:90:void androidx.profileinstaller.ProfileInstallerInitializer$$InternalSyntheticLambda$2$03a6ae1fad12ddf91cb6ffc3c686c10ad059d5325c1df7cdae6dc2cb5a8d8b96$0.run$bridge():0 -> run
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl -> g.l:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    1:1:void postFrameCallback(java.lang.Runnable):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$ExternalSyntheticLambda0 -> g.k:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    java.lang.Runnable androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.<init>(java.lang.Runnable):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    3:6:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl.lambda$postFrameCallback$0(java.lang.Runnable,long):0:0 -> doFrame
    3:6:void androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl$$InternalSyntheticLambda$2$dd4b7bded0037cdb0fa34ef5820826a5e0fd89e1034ce4aa9969280fa8f012f3$0.doFrame(long):0 -> doFrame
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl -> g.n:
# {"id":"sourceFile","fileName":"ProfileInstallerInitializer.java"}
    1:1:android.os.Handler createAsync(android.os.Looper):0:0 -> a
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$ExternalSyntheticApiModelOutline0 -> g.m:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Bitmap io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$2.m(android.graphics.ImageDecoder$Source,android.graphics.ImageDecoder$OnHeaderDecodedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder$Source;Ll/c;)Landroid/graphics/Bitmap;"}
    1:1:android.graphics.ImageDecoder$Source io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$0.m(java.nio.ByteBuffer):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.os.Handler androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl$$InternalSyntheticApiModelOutline$3$8d52cf30b98a04962970f0c5e6c7c8573caae9b733781b8847fa0ec96d6a0ee8$0.m(android.os.Looper):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.util.Size io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$4.m(android.graphics.ImageDecoder$ImageInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$3.m(android.graphics.ImageDecoder,int):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/graphics/ImageDecoder;)V"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$2.m(android.graphics.ImageDecoder,android.graphics.ColorSpace):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
androidx.profileinstaller.ProfileVerifier -> g.r:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    androidx.concurrent.futures.ResolvableFuture sFuture -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ld/i;"}
    java.lang.Object SYNC_OBJ -> b
    androidx.profileinstaller.ProfileVerifier$CompilationStatus sCompilationStatus -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/q;"}
    1:2:androidx.concurrent.futures.ResolvableFuture androidx.concurrent.futures.ResolvableFuture.create():0:0 -> <clinit>
    1:2:void <clinit>():0 -> <clinit>
    3:7:void androidx.concurrent.futures.AbstractResolvableFuture.<init>():0:0 -> <clinit>
    3:7:void androidx.concurrent.futures.ResolvableFuture.<init>():0 -> <clinit>
    3:7:androidx.concurrent.futures.ResolvableFuture androidx.concurrent.futures.ResolvableFuture.create():0 -> <clinit>
    3:7:void <clinit>():0 -> <clinit>
    8:18:void <clinit>():0:0 -> <clinit>
    1:1:long getPackageLastUpdateTime(android.content.Context):0:0 -> a
    3:9:void androidx.profileinstaller.ProfileVerifier$CompilationStatus.<init>(int,boolean,boolean):0:0 -> b
    3:9:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lg/q;"}
    10:12:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0:0 -> b
    13:27:boolean androidx.concurrent.futures.AbstractResolvableFuture.set(java.lang.Object):0:0 -> b
    13:27:boolean androidx.concurrent.futures.ResolvableFuture.set(java.lang.Object):0 -> b
    13:27:androidx.profileinstaller.ProfileVerifier$CompilationStatus setCompilationStatus(int,boolean,boolean):0 -> b
    1:1:androidx.profileinstaller.ProfileVerifier$CompilationStatus writeProfileVerification(android.content.Context,boolean):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Z)V"}
androidx.profileinstaller.ProfileVerifier$Api33Impl -> g.o:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    1:1:android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context):0:0 -> a
androidx.profileinstaller.ProfileVerifier$Cache -> g.p:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
    int mSchema -> a
    int mResultCode -> b
    long mPackageLastUpdateTime -> c
    long mInstalledCurrentProfileSize -> d
    1:1:void <init>(int,int,long,long):0:0 -> <init>
    1:1:androidx.profileinstaller.ProfileVerifier$Cache readFromFile(java.io.File):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/io/File;)Lg/p;"}
    1:1:void writeOnFile(java.io.File):0:0 -> b
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:1:int hashCode():0:0 -> hashCode
androidx.profileinstaller.ProfileVerifier$CompilationStatus -> g.q:
# {"id":"sourceFile","fileName":"ProfileVerifier.java"}
androidx.profileinstaller.WritableFileSection -> g.s:
# {"id":"sourceFile","fileName":"WritableFileSection.java"}
    androidx.profileinstaller.FileSectionType mType -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"I"}
    byte[] mContents -> b
    boolean mNeedsCompression -> c
    1:1:void <init>(androidx.profileinstaller.FileSectionType,int,byte[],boolean):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(I[BZ)V"}
androidx.startup.AppInitializer -> h.a:
# {"id":"sourceFile","fileName":"AppInitializer.java"}
    java.util.Map mInitialized -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/HashMap;"}
    java.util.Set mDiscovered -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/HashSet;"}
    android.content.Context mContext -> c
    androidx.startup.AppInitializer sInstance -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lh/a;"}
    java.lang.Object sLock -> e
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void <init>(android.content.Context):0:0 -> <init>
    89:91:void androidx.startup.StartupException.<init>(java.lang.Throwable):0:0 -> a
    89:91:void discoverAndInitialize(android.os.Bundle):0 -> a
    92:93:void discoverAndInitialize(android.os.Bundle):0:0 -> a
    9:22:boolean androidx.tracing.Trace.isEnabled():0:0 -> b
    9:22:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/Class;Ljava/util/HashSet;)V"}
    23:73:boolean androidx.tracing.Trace.isEnabledFallback():0:0 -> b
    23:73:boolean androidx.tracing.Trace.isEnabled():0 -> b
    23:73:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    74:77:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    78:90:java.lang.String androidx.tracing.Trace.truncatedTraceSectionLabel(java.lang.String):0:0 -> b
    78:90:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> b
    78:90:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    91:97:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> b
    91:97:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> b
    91:97:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    98:125:void androidx.tracing.Trace.handleException(java.lang.String,java.lang.Exception):0:0 -> b
    98:125:boolean androidx.tracing.Trace.isEnabledFallback():0 -> b
    98:125:boolean androidx.tracing.Trace.isEnabled():0 -> b
    98:125:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    126:209:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    210:212:void androidx.startup.StartupException.<init>(java.lang.Throwable):0:0 -> b
    210:212:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    213:216:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    217:224:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> b
    217:224:void androidx.tracing.Trace.endSection():0 -> b
    217:224:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    225:240:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    241:243:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> b
    241:243:void androidx.tracing.Trace.endSection():0 -> b
    241:243:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0 -> b
    244:244:java.lang.Object doInitialize(java.lang.Class,java.util.Set):0:0 -> b
    1:1:androidx.startup.AppInitializer getInstance(android.content.Context):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)Lh/a;"}
androidx.startup.InitializationProvider -> androidx.startup.InitializationProvider:
# {"id":"sourceFile","fileName":"InitializationProvider.java"}
    17:20:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    17:20:boolean onCreate():0 -> onCreate
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    21:23:void androidx.tracing.TraceApi18Impl.beginSection(java.lang.String):0:0 -> onCreate
    21:23:void androidx.tracing.Trace.beginSection(java.lang.String):0 -> onCreate
    21:23:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    21:23:boolean onCreate():0 -> onCreate
    24:53:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    24:53:boolean onCreate():0 -> onCreate
    54:60:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> onCreate
    54:60:void androidx.tracing.Trace.endSection():0 -> onCreate
    54:60:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    54:60:boolean onCreate():0 -> onCreate
    61:62:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    61:62:boolean onCreate():0 -> onCreate
    63:65:void androidx.startup.StartupException.<init>(java.lang.Throwable):0:0 -> onCreate
    63:65:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    63:65:boolean onCreate():0 -> onCreate
    66:66:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    66:66:boolean onCreate():0 -> onCreate
    67:69:void androidx.tracing.TraceApi18Impl.endSection():0:0 -> onCreate
    67:69:void androidx.tracing.Trace.endSection():0 -> onCreate
    67:69:void androidx.startup.AppInitializer.discoverAndInitialize():0 -> onCreate
    67:69:boolean onCreate():0 -> onCreate
    70:72:void androidx.startup.AppInitializer.discoverAndInitialize():0:0 -> onCreate
    70:72:boolean onCreate():0 -> onCreate
    73:76:boolean onCreate():0:0 -> onCreate
    77:79:void androidx.startup.StartupException.<init>(java.lang.String):0:0 -> onCreate
    77:79:boolean onCreate():0 -> onCreate
    80:80:boolean onCreate():0:0 -> onCreate
androidx.startup.Initializer -> h.b:
# {"id":"sourceFile","fileName":"Initializer.java"}
    java.lang.Object create(android.content.Context) -> a
    java.util.List dependencies() -> b
androidx.startup.StartupException -> h.c:
# {"id":"sourceFile","fileName":"StartupException.java"}
    1:1:void com.getkeepsafe.relinker.MissingLibraryException.<init>(java.lang.String,java.lang.String[],java.lang.String[]):0:0 -> <init>
androidx.tracing.Trace -> R8$$REMOVED$$CLASS$$17:
# {"id":"sourceFile","fileName":"Trace.java"}
androidx.tracing.TraceApi18Impl -> R8$$REMOVED$$CLASS$$18:
# {"id":"sourceFile","fileName":"TraceApi18Impl.java"}
androidx.tracing.TraceApi29Impl -> i.a:
# {"id":"sourceFile","fileName":"TraceApi29Impl.java"}
    1:1:boolean isEnabled():0:0 -> a
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
# {"id":"sourceFile","fileName":"CustomVersionedParcelable.java"}
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    androidx.versionedparcelable.VersionedParcelable mParcel -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lj/d;"}
    3:8:void androidx.versionedparcelable.ParcelImpl$1.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
androidx.versionedparcelable.ParcelImpl$1 -> j.a:
# {"id":"sourceFile","fileName":"ParcelImpl.java"}
    1:6:androidx.versionedparcelable.ParcelImpl androidx.versionedparcelable.ParcelImpl$1.createFromParcel(android.os.Parcel):0:0 -> createFromParcel
    1:6:java.lang.Object createFromParcel(android.os.Parcel):0 -> createFromParcel
    1:3:androidx.versionedparcelable.ParcelImpl[] androidx.versionedparcelable.ParcelImpl$1.newArray(int):0:0 -> newArray
    1:3:java.lang.Object[] newArray(int):0 -> newArray
androidx.versionedparcelable.VersionedParcel -> j.b:
# {"id":"sourceFile","fileName":"VersionedParcel.java"}
    androidx.collection.ArrayMap mReadCache -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/b;"}
    androidx.collection.ArrayMap mWriteCache -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/b;"}
    androidx.collection.ArrayMap mParcelizerCache -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lc/b;"}
    1:1:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lc/b;Lc/b;Lc/b;)V"}
    androidx.versionedparcelable.VersionedParcel createSubParcel() -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c;"}
    8:11:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> b
    8:11:java.lang.Class findParcelClass(java.lang.Class):0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    12:54:java.lang.Class findParcelClass(java.lang.Class):0:0 -> b
    55:58:java.lang.Class findParcelClass(java.lang.Class):0:0 -> b
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    4:7:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> c
    4:7:java.lang.reflect.Method getReadMethod(java.lang.String):0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    8:36:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> c
    37:40:java.lang.reflect.Method getReadMethod(java.lang.String):0:0 -> c
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    8:11:java.lang.Object androidx.collection.SimpleArrayMap.get(java.lang.Object):0:0 -> d
    8:11:java.lang.reflect.Method getWriteMethod(java.lang.Class):0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.synthesized"}
    12:43:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> d
    44:47:java.lang.reflect.Method getWriteMethod(java.lang.Class):0:0 -> d
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(0)"]}
    boolean readField(int) -> e
    13:23:android.os.Parcelable androidx.versionedparcelable.VersionedParcelParcel.readParcelable():0:0 -> f
    13:23:android.os.Parcelable readParcelable(android.os.Parcelable,int):0 -> f
    6:13:java.lang.String androidx.versionedparcelable.VersionedParcelParcel.readString():0:0 -> g
    6:13:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> g
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/d;"}
    14:17:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0:0 -> g
    18:89:androidx.versionedparcelable.VersionedParcelable androidx.versionedparcelable.VersionedParcel.readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel):0:0 -> g
    18:89:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable():0 -> g
    void setOutputField(int) -> h
    9:12:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> i
    9:12:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lj/d;)V"}
    13:29:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> i
    13:29:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    30:32:void androidx.versionedparcelable.VersionedParcelParcel.writeString(java.lang.String):0:0 -> i
    30:32:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0 -> i
    30:32:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    33:36:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0:0 -> i
    37:56:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> i
    37:56:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    57:92:void androidx.versionedparcelable.VersionedParcelParcel.closeField():0:0 -> i
    57:92:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    93:140:void androidx.versionedparcelable.VersionedParcel.writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel):0:0 -> i
    93:140:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
    141:160:void androidx.versionedparcelable.VersionedParcel.writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable):0:0 -> i
    141:160:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable):0 -> i
androidx.versionedparcelable.VersionedParcelParcel -> j.c:
# {"id":"sourceFile","fileName":"VersionedParcelParcel.java"}
    android.util.SparseIntArray mPositionLookup -> d
    android.os.Parcel mParcel -> e
    int mOffset -> f
    int mEnd -> g
    java.lang.String mPrefix -> h
    int mCurrentField -> i
    int mNextRead -> j
    int mFieldId -> k
    1:1:void <init>(android.os.Parcel):0:0 -> <init>
    2:2:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/os/Parcel;IILjava/lang/String;Lc/b;Lc/b;Lc/b;)V"}
    1:1:androidx.versionedparcelable.VersionedParcel createSubParcel():0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lj/c;"}
    1:1:boolean readField(int):0:0 -> e
    9:29:void androidx.versionedparcelable.VersionedParcelParcel.closeField():0:0 -> h
    9:29:void setOutputField(int):0 -> h
    30:37:void setOutputField(int):0:0 -> h
    38:44:void androidx.versionedparcelable.VersionedParcelParcel.writeInt(int):0:0 -> h
    38:44:void setOutputField(int):0 -> h
androidx.versionedparcelable.VersionedParcelable -> j.d:
# {"id":"sourceFile","fileName":"VersionedParcelable.java"}
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements -> androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements:
# {"id":"sourceFile","fileName":"ExtensionWindowAreaPresentationRequirements.java"}
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements -> androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements:
# {"id":"sourceFile","fileName":"ExtensionWindowAreaStatusRequirements.java"}
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements -> androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements:
# {"id":"sourceFile","fileName":"WindowAreaComponentApi2Requirements.java"}
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements -> androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements:
# {"id":"sourceFile","fileName":"WindowAreaComponentApi3Requirements.java"}
androidx.window.extensions.core.util.function.Consumer -> androidx.window.extensions.core.util.function.Consumer:
# {"id":"sourceFile","fileName":"Consumer.java"}
androidx.window.extensions.core.util.function.Function -> androidx.window.extensions.core.util.function.Function:
# {"id":"sourceFile","fileName":"Function.java"}
androidx.window.extensions.core.util.function.Predicate -> androidx.window.extensions.core.util.function.Predicate:
# {"id":"sourceFile","fileName":"Predicate.java"}
com.getkeepsafe.relinker.ApkLibraryInstaller -> R8$$REMOVED$$CLASS$$19:
# {"id":"sourceFile","fileName":"ApkLibraryInstaller.java"}
com.getkeepsafe.relinker.ApkLibraryInstaller$ZipFileInZipEntry -> k.a:
# {"id":"sourceFile","fileName":"ApkLibraryInstaller.java"}
    java.util.zip.ZipFile zipFile -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/lang/Object;"}
    java.util.zip.ZipEntry zipEntry -> b
com.getkeepsafe.relinker.ReLinker -> R8$$REMOVED$$CLASS$$20:
# {"id":"sourceFile","fileName":"ReLinker.java"}
com.getkeepsafe.relinker.ReLinkerInstance -> k.c:
# {"id":"sourceFile","fileName":"ReLinkerInstance.java"}
    java.util.Set loadedLibraries -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ljava/util/HashSet;"}
    com.getkeepsafe.relinker.ReLinker$LibraryLoader libraryLoader -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/j;"}
    com.getkeepsafe.relinker.ReLinker$LibraryInstaller libraryInstaller -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/j;"}
    13:27:void com.getkeepsafe.relinker.ReLinkerInstance.<init>(com.getkeepsafe.relinker.ReLinker$LibraryLoader,com.getkeepsafe.relinker.ReLinker$LibraryInstaller):0:0 -> <init>
    13:27:void <init>():0 -> <init>
    13:26:boolean com.getkeepsafe.relinker.TextUtils.isEmpty(java.lang.CharSequence):0:0 -> a
    13:26:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0 -> a
    27:28:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    29:32:java.io.File com.getkeepsafe.relinker.ReLinkerInstance.getWorkaroundLibDir(android.content.Context):0:0 -> a
    29:32:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0 -> a
    33:38:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    39:42:java.io.File com.getkeepsafe.relinker.ReLinkerInstance.getWorkaroundLibDir(android.content.Context):0:0 -> a
    39:42:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0 -> a
    43:66:java.io.File getWorkaroundLibFile(android.content.Context,java.lang.String,java.lang.String):0:0 -> a
    5:18:boolean com.getkeepsafe.relinker.TextUtils.isEmpty(java.lang.CharSequence):0:0 -> b
    5:18:void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener):0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;)V"}
    19:42:void loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener):0:0 -> b
    1:1:void com.getkeepsafe.relinker.SystemLibraryLoader.loadLibrary(java.lang.String):0:0 -> c
    1:1:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    2:2:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    3:3:java.io.File com.getkeepsafe.relinker.ReLinkerInstance.getWorkaroundLibDir(android.content.Context):0:0 -> c
    3:3:void com.getkeepsafe.relinker.ReLinkerInstance.cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String):0 -> c
    3:3:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    4:4:void com.getkeepsafe.relinker.ReLinkerInstance.cleanupOldLibFiles(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    4:4:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    5:5:java.lang.String[] com.getkeepsafe.relinker.SystemLibraryLoader.supportedAbis():0:0 -> c
    5:5:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    6:6:boolean com.getkeepsafe.relinker.TextUtils.isEmpty(java.lang.CharSequence):0:0 -> c
    6:6:java.lang.String[] com.getkeepsafe.relinker.SystemLibraryLoader.supportedAbis():0 -> c
    6:6:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    7:7:java.lang.String[] com.getkeepsafe.relinker.SystemLibraryLoader.supportedAbis():0:0 -> c
    7:7:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    8:8:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    9:9:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    9:9:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    10:10:long com.getkeepsafe.relinker.ApkLibraryInstaller.copy(java.io.InputStream,java.io.OutputStream):0:0 -> c
    10:10:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0 -> c
    10:10:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    11:11:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    11:11:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    12:12:long com.getkeepsafe.relinker.ApkLibraryInstaller.copy(java.io.InputStream,java.io.OutputStream):0:0 -> c
    12:12:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0 -> c
    12:12:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    13:13:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    13:13:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    14:14:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    15:15:void com.getkeepsafe.relinker.SystemLibraryLoader.loadPath(java.lang.String):0:0 -> c
    15:15:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    16:16:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0:0 -> c
    17:17:void com.getkeepsafe.relinker.ApkLibraryInstaller.installLibrary(android.content.Context,java.lang.String[],java.lang.String,java.io.File,com.getkeepsafe.relinker.ReLinkerInstance):0:0 -> c
    17:17:void loadLibraryInternal(android.content.Context,java.lang.String,java.lang.String):0 -> c
    1:1:void log(java.lang.String,java.lang.Object[]):0:0 -> d
com.getkeepsafe.relinker.ReLinkerInstance$2 -> k.b:
# {"id":"sourceFile","fileName":"ReLinkerInstance.java"}
    java.lang.String val$mappedLibraryName -> a
    1:1:void <init>(com.getkeepsafe.relinker.ReLinkerInstance,java.lang.String):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ljava/lang/String;)V"}
    1:1:boolean accept(java.io.File,java.lang.String):0:0 -> accept
com.getkeepsafe.relinker.SystemLibraryLoader -> R8$$REMOVED$$CLASS$$21:
# {"id":"sourceFile","fileName":"SystemLibraryLoader.java"}
com.getkeepsafe.relinker.TextUtils -> R8$$REMOVED$$CLASS$$22:
# {"id":"sourceFile","fileName":"TextUtils.java"}
io.flutter.Log -> R8$$REMOVED$$CLASS$$23:
# {"id":"sourceFile","fileName":"Log.java"}
io.flutter.embedding.engine.FlutterEngine -> l.b:
# {"id":"sourceFile","fileName":"FlutterEngine.java"}
io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener -> l.a:
# {"id":"sourceFile","fileName":"FlutterEngine.java"}
io.flutter.embedding.engine.FlutterJNI -> io.flutter.embedding.engine.FlutterJNI:
# {"id":"sourceFile","fileName":"FlutterJNI.java"}
    io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate -> accessibilityDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/d;"}
    io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate -> asyncWaitForVsyncDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ll/e;"}
    io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager -> deferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ln/a;"}
    io.flutter.plugin.localization.LocalizationPlugin localizationPlugin -> localizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lr/a;"}
    io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler -> platformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lm/a;"}
    io.flutter.plugin.platform.PlatformViewsController platformViewsController -> platformViewsController
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/c;"}
    1:1:void $r8$lambda$2fUF03zsar2dpLbGJv6IUmJU-0A(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> addEngineLifecycleListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    27:30:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> decodeImage
    27:30:android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long):0 -> decodeImage
    44:47:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> dispatchEmptyPlatformMessage
    44:47:void dispatchEmptyPlatformMessage(java.lang.String,int):0 -> dispatchEmptyPlatformMessage
    1:1:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> dispatchPlatformMessage
    1:1:void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int):0 -> dispatchPlatformMessage
    1:1:void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int):0:0 -> dispatchSemanticsAction
    2:2:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action):0:0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/a;)V"}
    3:3:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0:0 -> dispatchSemanticsAction
    3:3:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
      # {"id":"com.android.tools.r8.residualsignature","signature":"(ILio/flutter/view/a;Ljava/lang/Object;)V"}
    4:4:void io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream.<init>():0:0 -> dispatchSemanticsAction
    4:4:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0 -> dispatchSemanticsAction
    4:4:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
    5:5:java.nio.ByteBuffer io.flutter.plugin.common.StandardMessageCodec.encodeMessage(java.lang.Object):0:0 -> dispatchSemanticsAction
    5:5:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0 -> dispatchSemanticsAction
    6:6:void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object):0:0 -> dispatchSemanticsAction
    1:4:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0:0 -> getScaledFontSize
    1:4:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    1:4:float getScaledFontSize(float,int):0 -> getScaledFontSize
    5:46:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0:0 -> getScaledFontSize
    5:46:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
    5:46:float getScaledFontSize(float,int):0 -> getScaledFontSize
    47:49:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> getScaledFontSize
    47:49:io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue$SentConfiguration io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.getConfiguration(int):0 -> getScaledFontSize
    47:49:android.util.DisplayMetrics io.flutter.embedding.engine.systemchannels.SettingsChannel.getPastDisplayMetrics(int):0 -> getScaledFontSize
    47:49:float getScaledFontSize(float,int):0 -> getScaledFontSize
    50:74:float getScaledFontSize(float,int):0:0 -> getScaledFontSize
    75:80:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> getScaledFontSize
    75:80:float getScaledFontSize(float,int):0 -> getScaledFontSize
    1:1:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> init
    1:1:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long):0 -> init
    2:2:void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long):0:0 -> init
    44:48:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> invokePlatformMessageEmptyResponseCallback
    44:48:void invokePlatformMessageEmptyResponseCallback(int):0 -> invokePlatformMessageEmptyResponseCallback
    49:66:void invokePlatformMessageEmptyResponseCallback(int):0:0 -> invokePlatformMessageEmptyResponseCallback
    54:58:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> invokePlatformMessageResponseCallback
    54:58:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int):0 -> invokePlatformMessageResponseCallback
    59:84:void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int):0:0 -> invokePlatformMessageResponseCallback
    9:11:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> loadLibrary
    9:11:void loadLibrary(android.content.Context):0 -> loadLibrary
    12:23:void com.getkeepsafe.relinker.ReLinker.loadLibrary(android.content.Context,java.lang.String,java.lang.String,com.getkeepsafe.relinker.ReLinker$LoadListener):0:0 -> loadLibrary
    12:23:void com.getkeepsafe.relinker.ReLinker.loadLibrary(android.content.Context,java.lang.String):0 -> loadLibrary
    12:23:void loadLibrary(android.content.Context):0 -> loadLibrary
    9:11:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> prefetchDefaultFontManager
    9:11:void prefetchDefaultFontManager():0 -> prefetchDefaultFontManager
    12:18:void prefetchDefaultFontManager():0:0 -> prefetchDefaultFontManager
    1:1:void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener):0:0 -> removeEngineLifecycleListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/a;)V"}
    5:8:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> requestDartDeferredLibrary
    5:8:void requestDartDeferredLibrary(int):0 -> requestDartDeferredLibrary
    1:1:void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate):0:0 -> setAccessibilityDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/d;)V"}
    1:1:void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate):0:0 -> setAsyncWaitForVsyncDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/e;)V"}
    1:1:void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager):0:0 -> setDeferredComponentManager
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ln/a;)V"}
    1:1:void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin):0:0 -> setLocalizationPlugin
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lr/a;)V"}
    1:1:void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler):0:0 -> setPlatformMessageHandler
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lm/a;)V"}
    1:1:void io.flutter.util.Preconditions.checkState(boolean,java.lang.Object):0:0 -> spawn
    1:1:io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List):0 -> spawn
io.flutter.embedding.engine.FlutterJNI$$ExternalSyntheticLambda7 -> l.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    long io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.f$0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.<init>(long):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticLambda$1$2a5524ed219e708ff31c82ad8e0395d5d0898b08cb74f1a02a2f346a4db7f98c$1.onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source):0:0 -> onHeaderDecoded
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate -> l.d:
# {"id":"sourceFile","fileName":"FlutterJNI.java"}
io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate -> l.e:
# {"id":"sourceFile","fileName":"FlutterJNI.java"}
io.flutter.embedding.engine.FlutterOverlaySurface -> io.flutter.embedding.engine.FlutterOverlaySurface:
# {"id":"sourceFile","fileName":"FlutterOverlaySurface.java"}
io.flutter.embedding.engine.dart.PlatformMessageHandler -> m.a:
# {"id":"sourceFile","fileName":"PlatformMessageHandler.java"}
io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager -> n.a:
# {"id":"sourceFile","fileName":"DeferredComponentManager.java"}
    void setJNI(io.flutter.embedding.engine.FlutterJNI) -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack -> io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack:
# {"id":"sourceFile","fileName":"FlutterMutatorsStack.java"}
    1:1:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect,float[]):0:0 -> pushClipRRect
    1:1:void pushClipRRect(int,int,int,int,float[]):0 -> pushClipRRect
    2:2:void pushClipRRect(int,int,int,int,float[]):0:0 -> pushClipRRect
    1:1:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Rect):0:0 -> pushClipRect
    1:1:void pushClipRect(int,int,int,int):0 -> pushClipRect
    2:2:void pushClipRect(int,int,int,int):0:0 -> pushClipRect
    11:15:void io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutator.<init>(io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack,android.graphics.Matrix):0:0 -> pushTransform
    11:15:void pushTransform(float[]):0 -> pushTransform
    16:24:void pushTransform(float[]):0:0 -> pushTransform
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference -> io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference:
# {"id":"sourceFile","fileName":"HiddenLifecycleReference.java"}
    androidx.lifecycle.Lifecycle lifecycle -> lifecycle
      # {"id":"com.android.tools.r8.residualsignature","signature":"Landroidx/lifecycle/f;"}
io.flutter.embedding.engine.renderer.FlutterRenderer -> io.flutter.embedding.engine.renderer.e:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback -> callback
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/view/h;"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage -> lastDequeuedImage
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/b;"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom -> lastReaderDequeuedFrom
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/d;"}
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/e;"}
    37:38:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    37:38:void cleanup():0 -> cleanup
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    39:51:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    39:51:void cleanup():0 -> cleanup
    52:69:void cleanup():0:0 -> cleanup
    70:85:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> cleanup
    70:85:void cleanup():0 -> cleanup
    86:92:void cleanup():0:0 -> cleanup
    24:25:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.dequeueImage():0:0 -> dequeueImage
    24:25:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/embedding/engine/renderer/b;"}
    26:47:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.dequeueImage():0:0 -> dequeueImage
    26:47:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
    48:81:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> dequeueImage
    82:83:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.imageQueueIsEmpty():0:0 -> dequeueImage
    82:83:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    84:92:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.imageQueueIsEmpty():0:0 -> dequeueImage
    84:92:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
    93:96:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> dequeueImage
    97:97:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> dequeueImage
    97:97:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0 -> dequeueImage
    98:99:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage():0:0 -> dequeueImage
    13:14:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> finalize
    13:14:void finalize():0 -> finalize
    15:18:void finalize():0:0 -> finalize
    23:24:java.util.ArrayDeque io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> numImages
    23:24:int numImages():0 -> numImages
    25:36:int numImages():0:0 -> numImages
    8:14:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.queueImage(android.media.Image):0:0 -> onImage
    8:14:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    15:48:io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.queueImage(android.media.Image):0:0 -> onImage
    15:48:void onImage(android.media.ImageReader,android.media.Image):0 -> onImage
    49:56:void onImage(android.media.ImageReader,android.media.Image):0:0 -> onImage
    20:37:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.canPrune():0:0 -> pruneImageReaderQueue
    20:37:void pruneImageReaderQueue():0 -> pruneImageReaderQueue
    38:47:void pruneImageReaderQueue():0:0 -> pruneImageReaderQueue
    48:57:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.close():0:0 -> pruneImageReaderQueue
    48:57:void pruneImageReaderQueue():0 -> pruneImageReaderQueue
    10:10:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> release
    10:10:void release():0 -> release
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$ExternalSyntheticApiModelOutline0 -> io.flutter.embedding.engine.renderer.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.hardware.SyncFence io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$0.m(android.media.Image):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$8$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(int,int):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.media.ImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$3.m(android.media.ImageReader$Builder):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$8$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$685e711b6a86eca5f914a3e20520c224bfc614c662da16953495279006885cfd$1.m(android.hardware.SyncFence):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/hardware/SyncFence;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$0.m(android.media.ImageReader$Builder,int):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$1.m(android.media.ImageReader$Builder,int):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
    1:1:android.media.ImageReader$Builder io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$$InternalSyntheticApiModelOutline$1$38fd5b78e06d091b60f0e5b6a1d96357f24d81029ca46c23e1073e66c97166de$2.m(android.media.ImageReader$Builder,long):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/media/ImageReader$Builder;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage -> io.flutter.embedding.engine.renderer.b:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    android.media.Image image -> a
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> b
    1:1:void <init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,android.media.Image,long):0:0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/FlutterRenderer$ImageReaderSurfaceProducer;Landroid/media/Image;)V"}
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader -> io.flutter.embedding.engine.renderer.d:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    android.media.ImageReader reader -> a
    java.util.ArrayDeque imageQueue -> b
    boolean closed -> c
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer this$1 -> d
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$ExternalSyntheticLambda0 -> io.flutter.embedding.engine.renderer.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.f$0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/d;"}
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.<init>(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader):0:0 -> <init>
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/embedding/engine/renderer/d;)V"}
    6:27:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0:0 -> onImageAvailable
    6:27:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
      # {"id":"com.android.tools.r8.synthesized"}
    28:34:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> onImageAvailable
    28:34:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0 -> onImageAvailable
    28:34:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
    35:55:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader.lambda$new$0(android.media.ImageReader):0:0 -> onImageAvailable
    35:55:void io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader$$InternalSyntheticLambda$1$fbd8cf905037c3de078ec66e7223e3298cff8af27e641bd1b0ba7b197b23c7ed$0.onImageAvailable(android.media.ImageReader):0 -> onImageAvailable
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry -> io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry:
# {"id":"sourceFile","fileName":"FlutterRenderer.java"}
    io.flutter.embedding.engine.renderer.FlutterRenderer this$0 -> this$0
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/embedding/engine/renderer/e;"}
    25:25:android.os.Handler io.flutter.embedding.engine.renderer.FlutterRenderer.access$600(io.flutter.embedding.engine.renderer.FlutterRenderer):0:0 -> finalize
    25:25:void finalize():0 -> finalize
    26:29:void finalize():0:0 -> finalize
    18:20:void io.flutter.Log.e(java.lang.String,java.lang.String):0:0 -> pushImage
    18:20:void pushImage(android.media.Image):0 -> pushImage
    21:31:void pushImage(android.media.Image):0:0 -> pushImage
    19:19:void io.flutter.embedding.engine.renderer.FlutterRenderer.access$400(io.flutter.embedding.engine.renderer.FlutterRenderer,long):0:0 -> release
    19:19:void release():0 -> release
io.flutter.embedding.engine.renderer.FlutterUiDisplayListener -> io.flutter.embedding.engine.renderer.f:
# {"id":"sourceFile","fileName":"FlutterUiDisplayListener.java"}
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper -> io.flutter.embedding.engine.renderer.SurfaceTextureWrapper:
# {"id":"sourceFile","fileName":"SurfaceTextureWrapper.java"}
    1:1:void <init>(android.graphics.SurfaceTexture):0:0 -> <init>
    2:2:void <init>(android.graphics.SurfaceTexture,java.lang.Runnable):0:0 -> <init>
io.flutter.embedding.engine.systemchannels.SettingsChannel -> p.a:
# {"id":"sourceFile","fileName":"SettingsChannel.java"}
    io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue CONFIGURATION_QUEUE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lk/a;"}
    3:15:void io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue.<init>():0:0 -> <clinit>
    3:15:void <clinit>():0 -> <clinit>
io.flutter.embedding.engine.systemchannels.SettingsChannel$ConfigurationQueue -> R8$$REMOVED$$CLASS$$24:
# {"id":"sourceFile","fileName":"SettingsChannel.java"}
io.flutter.plugin.common.StandardMessageCodec -> q.b:
# {"id":"sourceFile","fileName":"StandardMessageCodec.java"}
    boolean LITTLE_ENDIAN -> a
    java.nio.charset.Charset UTF8 -> b
    1:1:void <clinit>():0:0 -> <clinit>
    1:1:void writeAlignment(java.io.ByteArrayOutputStream,int):0:0 -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a;I)V"}
    1:1:void writeInt(java.io.ByteArrayOutputStream,int):0:0 -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a;I)V"}
    1:1:void writeLong(java.io.ByteArrayOutputStream,long):0:0 -> c
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a;J)V"}
    21:37:void io.flutter.plugin.common.StandardMessageCodec.writeChar(java.io.ByteArrayOutputStream,int):0:0 -> d
    21:37:void writeSize(java.io.ByteArrayOutputStream,int):0 -> d
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a;I)V"}
    38:44:void writeSize(java.io.ByteArrayOutputStream,int):0:0 -> d
    102:111:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    102:111:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lq/a;Ljava/lang/Object;)V"}
    112:148:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    149:158:void io.flutter.plugin.common.StandardMessageCodec.writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> e
    149:158:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    159:188:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    189:198:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    189:198:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    199:207:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    208:217:void io.flutter.plugin.common.StandardMessageCodec.writeBytes(java.io.ByteArrayOutputStream,byte[]):0:0 -> e
    208:217:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    218:298:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    299:308:void io.flutter.plugin.common.StandardMessageCodec.writeDouble(java.io.ByteArrayOutputStream,double):0:0 -> e
    299:308:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    309:420:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
    421:430:void io.flutter.plugin.common.StandardMessageCodec.writeFloat(java.io.ByteArrayOutputStream,float):0:0 -> e
    421:430:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0 -> e
    431:471:void writeValue(java.io.ByteArrayOutputStream,java.lang.Object):0:0 -> e
io.flutter.plugin.common.StandardMessageCodec$ExposedByteArrayOutputStream -> q.a:
# {"id":"sourceFile","fileName":"StandardMessageCodec.java"}
    1:1:byte[] buffer():0:0 -> a
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback:
# {"id":"sourceFile","fileName":"ImeSyncDeferringInsetsCallback.java"}
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener -> insetsListener
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/editing/b;"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$ExternalSyntheticApiModelOutline0 -> io.flutter.plugin.editing.a:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$bd1cd9d0943ca231e7274d929fa7c010412d008ae6662d31a63e4bf50757d82d$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$2cc005fa53a8049e244b5ffce5b2e308ea0dcdb0fed28f3a858d514c163d0b4f$0.m(android.view.WindowInsetsAnimation):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.Insets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$3.m(android.view.WindowInsets,int):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener$$InternalSyntheticApiModelOutline$2$7621ae6b31d73989a7db55d84f222be8c49f3925f8ce880690142b667165942e$0.m():0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsetsAnimation io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$0.m(java.lang.Object):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$512bd08af4a4826aa6bf69ffea8b7559cd1ea1887827bdbe0ea32b6c735136b2$0.m(android.view.WindowManager):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$4c819f8c8ad227d9802b1a549dcea82babc035996fc947c4508511c1b3807738$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;)V"}
    1:1:void io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$$InternalSyntheticApiModelOutline$1$524166dcacb1ec2521be0b4cc9c9bbb9c4da57519381d013591dedc3f0213233$0.m(android.view.View,android.view.WindowInsetsAnimation$Callback):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowInsets$Builder io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$8.m(android.view.WindowInsets$Builder,int,android.graphics.Insets):0:0 -> i
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowInsets$Builder;ILandroid/graphics/Insets;)V"}
    1:1:int io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback$$InternalSyntheticApiModelOutline$1$b71cd158c488321664a8a05513cc1b2518b00c695b826cc4b8c6f88bf5c5e43d$2.m():0:0 -> j
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$b5695396496141d2a4a17509d3a51c5da8d47d4a7cc9fb47cc5063a45bafcaeb$0.m(android.view.WindowManager):0:0 -> k
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback -> io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback:
# {"id":"sourceFile","fileName":"ImeSyncDeferringInsetsCallback.java"}
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener -> io.flutter.plugin.editing.b:
# {"id":"sourceFile","fileName":"ImeSyncDeferringInsetsCallback.java"}
    io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0 -> a
    1:6:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback):0:0 -> <init>
    1:6:void <init>(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/plugin/editing/ImeSyncDeferringInsetsCallback;)V"}
io.flutter.plugin.localization.LocalizationPlugin -> r.a:
# {"id":"sourceFile","fileName":"LocalizationPlugin.java"}
io.flutter.plugin.platform.AccessibilityEventsDelegate -> io.flutter.plugin.platform.a:
# {"id":"sourceFile","fileName":"AccessibilityEventsDelegate.java"}
io.flutter.plugin.platform.PlatformView -> io.flutter.plugin.platform.b:
# {"id":"sourceFile","fileName":"PlatformView.java"}
io.flutter.plugin.platform.PlatformViewsController -> io.flutter.plugin.platform.c:
# {"id":"sourceFile","fileName":"PlatformViewsController.java"}
io.flutter.plugin.platform.SingleViewFakeWindowViewGroup -> io.flutter.plugin.platform.d:
# {"id":"sourceFile","fileName":"SingleViewFakeWindowViewGroup.java"}
    android.graphics.Rect viewBounds -> a
    android.graphics.Rect childRect -> b
    12:29:int atMost(int):0:0 -> onMeasure
    12:29:void onMeasure(int,int):0 -> onMeasure
    30:39:void onMeasure(int,int):0:0 -> onMeasure
io.flutter.plugin.platform.SingleViewPresentation -> io.flutter.plugin.platform.SingleViewPresentation:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate -> accessibilityEventsDelegate
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/a;"}
    io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView -> rootView
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/e;"}
    io.flutter.plugin.platform.SingleViewPresentation$PresentationState state -> state
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/h;"}
    1:1:void io.flutter.plugin.platform.SingleViewPresentation$ImmContext.<init>(android.content.Context):0:0 -> <init>
    1:1:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/a;Lio/flutter/plugin/platform/h;Landroid/view/View$OnFocusChangeListener;Z)V"}
    2:2:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean):0:0 -> <init>
    3:3:void io.flutter.plugin.platform.SingleViewPresentation$ImmContext.<init>(android.content.Context):0:0 -> <init>
    3:3:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/content/Context;Landroid/view/Display;Lio/flutter/plugin/platform/b;Lio/flutter/plugin/platform/a;ILandroid/view/View$OnFocusChangeListener;)V"}
    4:4:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
    5:5:void io.flutter.plugin.platform.SingleViewPresentation$PresentationState.<init>():0:0 -> <init>
    5:5:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0 -> <init>
    6:6:void <init>(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener):0:0 -> <init>
    3:7:io.flutter.plugin.platform.PlatformView io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> getView
    3:7:io.flutter.plugin.platform.PlatformView getView():0 -> getView
      # {"id":"com.android.tools.r8.residualsignature","signature":"()Lio/flutter/plugin/platform/b;"}
    19:22:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    19:22:void onCreate(android.os.Bundle):0 -> onCreate
    23:31:void onCreate(android.os.Bundle):0:0 -> onCreate
    32:35:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$102(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> onCreate
    32:35:void onCreate(android.os.Bundle):0 -> onCreate
    36:39:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    36:39:void onCreate(android.os.Bundle):0 -> onCreate
    40:55:void onCreate(android.os.Bundle):0:0 -> onCreate
    56:57:io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$100(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    56:57:void onCreate(android.os.Bundle):0 -> onCreate
    58:60:void onCreate(android.os.Bundle):0:0 -> onCreate
    61:62:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$202(io.flutter.plugin.platform.SingleViewPresentation$PresentationState,io.flutter.plugin.platform.WindowManagerHandler):0:0 -> onCreate
    61:62:void onCreate(android.os.Bundle):0 -> onCreate
    63:81:void onCreate(android.os.Bundle):0:0 -> onCreate
    82:85:io.flutter.plugin.platform.WindowManagerHandler io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$200(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    82:85:void onCreate(android.os.Bundle):0 -> onCreate
    86:90:void onCreate(android.os.Bundle):0:0 -> onCreate
    91:94:io.flutter.plugin.platform.PlatformView io.flutter.plugin.platform.SingleViewPresentation$PresentationState.access$000(io.flutter.plugin.platform.SingleViewPresentation$PresentationState):0:0 -> onCreate
    91:94:void onCreate(android.os.Bundle):0 -> onCreate
    95:95:void onCreate(android.os.Bundle):0:0 -> onCreate
io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout -> io.flutter.plugin.platform.e:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
io.flutter.plugin.platform.SingleViewPresentation$ImmContext -> io.flutter.plugin.platform.f:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    android.view.inputmethod.InputMethodManager inputMethodManager -> a
io.flutter.plugin.platform.SingleViewPresentation$PresentationContext -> io.flutter.plugin.platform.g:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/j;"}
    android.view.WindowManager windowManager -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/j;"}
    android.content.Context flutterAppWindowContext -> c
    9:58:boolean isCalledFromAlertDialog():0:0 -> getSystemService
    9:58:java.lang.Object getSystemService(java.lang.String):0 -> getSystemService
    59:82:java.lang.Object getSystemService(java.lang.String):0:0 -> getSystemService
io.flutter.plugin.platform.SingleViewPresentation$PresentationState -> io.flutter.plugin.platform.h:
# {"id":"sourceFile","fileName":"SingleViewPresentation.java"}
    io.flutter.plugin.platform.WindowManagerHandler windowManagerHandler -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/j;"}
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup fakeWindowViewGroup -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/d;"}
io.flutter.plugin.platform.SingleViewWindowManager -> R8$$REMOVED$$CLASS$$25:
# {"id":"sourceFile","fileName":"SingleViewWindowManager.java"}
io.flutter.plugin.platform.SingleViewWindowManager$$ExternalSyntheticApiModelOutline1 -> io.flutter.plugin.platform.i:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9f3564965ce31d288bde81f28853716eb3fae64fc3aab63ca1d7fbaecc73ea7a$0.m(android.view.WindowManager,java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$573fc38649fc257e28a079cf4377be00db9d882e093f28e1ee82d89fe072ef33$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$953a50dd753cf993668a5b905947d63b7720120083cc0cc67dc3ddce466ca3e4$0.m(android.view.WindowManager):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager$$InternalSyntheticApiModelOutline$1$9b7d142d148c8d8a447edf4d1839198704c3a116777d705c82e3b6107b939476$0.m(android.view.WindowManager,java.util.function.Consumer):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugin.platform.WindowManagerHandler -> io.flutter.plugin.platform.j:
# {"id":"sourceFile","fileName":"WindowManagerHandler.java"}
    android.view.WindowManager io.flutter.plugin.platform.SingleViewWindowManager.delegate -> a
    io.flutter.plugin.platform.SingleViewFakeWindowViewGroup io.flutter.plugin.platform.SingleViewWindowManager.fakeWindowRootView -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/plugin/platform/d;"}
    1:8:void io.flutter.plugin.platform.SingleViewWindowManager.<init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0:0 -> <init>
    1:8:void <init>(android.view.WindowManager,io.flutter.plugin.platform.SingleViewFakeWindowViewGroup):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/WindowManager;Lio/flutter/plugin/platform/d;)V"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> a
    1:1:void addCrossWindowBlurEnabledListener(java.util.concurrent.Executor,java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    2:2:void addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> addCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> addView
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.addCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> b
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> c
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams):0 -> c
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.addView(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> c
    1:1:void io.flutter.plugin.platform.SingleViewWindowManager.removeCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> d
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> e
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.removeView(android.view.View):0 -> e
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.removeView(android.view.View):0:0 -> e
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> f
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.removeViewImmediate(android.view.View):0 -> f
    13:21:void io.flutter.plugin.platform.SingleViewWindowManager.removeViewImmediate(android.view.View):0:0 -> f
    9:12:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> g
    9:12:void io.flutter.plugin.platform.SingleViewWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0 -> g
    13:16:void io.flutter.plugin.platform.SingleViewWindowManager.updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> g
    3:7:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager.getCurrentWindowMetrics():0:0 -> getCurrentWindowMetrics
    3:7:android.view.WindowMetrics getCurrentWindowMetrics():0 -> getCurrentWindowMetrics
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:android.view.Display io.flutter.plugin.platform.SingleViewWindowManager.getDefaultDisplay():0:0 -> getDefaultDisplay
    3:7:android.view.Display getDefaultDisplay():0 -> getDefaultDisplay
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:android.view.WindowMetrics io.flutter.plugin.platform.SingleViewWindowManager.getMaximumWindowMetrics():0:0 -> getMaximumWindowMetrics
    3:7:android.view.WindowMetrics getMaximumWindowMetrics():0 -> getMaximumWindowMetrics
      # {"id":"com.android.tools.r8.synthesized"}
    3:7:boolean io.flutter.plugin.platform.SingleViewWindowManager.isCrossWindowBlurEnabled():0:0 -> isCrossWindowBlurEnabled
    3:7:boolean isCrossWindowBlurEnabled():0 -> isCrossWindowBlurEnabled
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeCrossWindowBlurEnabledListener(java.util.function.Consumer):0:0 -> removeCrossWindowBlurEnabledListener
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeView(android.view.View):0:0 -> removeView
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void removeViewImmediate(android.view.View):0:0 -> removeViewImmediate
      # {"id":"com.android.tools.r8.synthesized"}
    1:4:void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams):0:0 -> updateViewLayout
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.plugins.GeneratedPluginRegistrant -> io.flutter.plugins.GeneratedPluginRegistrant:
# {"id":"sourceFile","fileName":"GeneratedPluginRegistrant.java"}
    8:10:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    8:10:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Ll/b;)V"}
    11:14:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    15:17:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    15:17:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    18:21:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    22:24:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    22:24:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
    25:28:void registerWith(io.flutter.embedding.engine.FlutterEngine):0:0 -> registerWith
    29:32:void io.flutter.Log.e(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> registerWith
    29:32:void registerWith(io.flutter.embedding.engine.FlutterEngine):0 -> registerWith
io.flutter.plugins.imagepicker.ImagePickerFileProvider -> io.flutter.plugins.imagepicker.ImagePickerFileProvider:
# {"id":"sourceFile","fileName":"ImagePickerFileProvider.java"}
io.flutter.util.Preconditions -> R8$$REMOVED$$CLASS$$26:
# {"id":"sourceFile","fileName":"Preconditions.java"}
io.flutter.view.AccessibilityBridge$Action -> io.flutter.view.a:
# {"id":"sourceFile","fileName":"AccessibilityBridge.java"}
    int value -> a
    io.flutter.view.AccessibilityBridge$Action[] $VALUES -> b
      # {"id":"com.android.tools.r8.residualsignature","signature":"[Lio/flutter/view/a;"}
io.flutter.view.AccessibilityViewEmbedder -> io.flutter.view.AccessibilityViewEmbedder:
# {"id":"sourceFile","fileName":"AccessibilityViewEmbedder.java"}
    io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors -> reflectionAccessors
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lio/flutter/view/d;"}
    11:13:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    11:13:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    11:13:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    14:51:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    14:51:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    14:51:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    52:58:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> addChildrenToFlutterNode
    52:58:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    52:58:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    52:58:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    59:100:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getChildId(android.view.accessibility.AccessibilityNodeInfo,int):0:0 -> addChildrenToFlutterNode
    59:100:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$500(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo,int):0 -> addChildrenToFlutterNode
    59:100:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> addChildrenToFlutterNode
    101:153:void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> addChildrenToFlutterNode
    21:32:java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord):0:0 -> getRecordFlutterId
    9:18:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> getRootNode
    9:18:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    9:18:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    19:31:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> getRootNode
    19:31:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    19:31:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    32:43:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> getRootNode
    32:43:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getSourceNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    32:43:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$100(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> getRootNode
    32:43:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0 -> getRootNode
    44:62:android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect):0:0 -> getRootNode
    25:148:boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent):0:0 -> requestSendAccessibilityEvent
    3:11:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    3:11:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
    3:11:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    12:32:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    12:32:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    12:32:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    33:48:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> setFlutterNodeParent
    33:48:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    33:48:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    33:48:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> setFlutterNodeParent
    49:53:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    49:53:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    54:125:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.yoinkParentIdFromParcel(android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
    54:125:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.getParentNodeId(android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    54:125:java.lang.Long io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors.access$300(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    54:125:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0 -> setFlutterNodeParent
    126:158:void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo):0:0 -> setFlutterNodeParent
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline0 -> io.flutter.view.b:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$1.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$0.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$$ExternalSyntheticApiModelOutline10 -> io.flutter.view.c:
# {"id":"sourceFile","fileName":"R8$$SyntheticClass"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace$Named io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$0.m():0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:android.graphics.ColorSpace io.flutter.embedding.engine.FlutterJNI$$InternalSyntheticApiModelOutline$1$2ca0fe582a9db9d2350370c904ee14f01e2f7fb5b73338825d8c63007f5abfe0$1.m(android.graphics.ColorSpace$Named):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.lang.CharSequence io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$8.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> c
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:java.util.List io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$6.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> d
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$9.m(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence):0:0 -> e
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$7.m(android.view.accessibility.AccessibilityNodeInfo,java.util.List):0:0 -> f
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:void io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$11.m(android.view.accessibility.AccessibilityNodeInfo,boolean):0:0 -> g
      # {"id":"com.android.tools.r8.synthesized"}
    1:1:boolean io.flutter.view.AccessibilityViewEmbedder$$InternalSyntheticApiModelOutline$1$5748db92e5ea0bf57e589b03ebff6c44bee4cdfa760f588503b01ab99cdc139b$10.m(android.view.accessibility.AccessibilityNodeInfo):0:0 -> h
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors -> io.flutter.view.d:
# {"id":"sourceFile","fileName":"AccessibilityViewEmbedder.java"}
    java.lang.reflect.Method getSourceNodeId -> a
    java.lang.reflect.Method getParentNodeId -> b
    java.lang.reflect.Method getRecordSourceNodeId -> c
    java.lang.reflect.Method getChildId -> d
    java.lang.reflect.Field childNodeIdsField -> e
    java.lang.reflect.Method longArrayGetIndex -> f
    7:20:void <init>():0:0 -> <init>
    7:20:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"()V"}
    21:28:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    21:28:void <init>():0 -> <init>
    21:28:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    29:35:void <init>():0:0 -> <init>
    29:35:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    36:50:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    36:50:void <init>():0 -> <init>
    36:50:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    51:57:void <init>():0:0 -> <init>
    51:57:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    58:69:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    58:69:void <init>():0 -> <init>
    58:69:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    70:79:void <init>():0:0 -> <init>
    70:79:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    80:87:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    80:87:void <init>():0 -> <init>
    80:87:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    88:118:void <init>():0:0 -> <init>
    88:118:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    119:137:void io.flutter.Log.w(java.lang.String,java.lang.String):0:0 -> <init>
    119:137:void <init>():0 -> <init>
    119:137:void <init>(io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
    3:11:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> a
    3:11:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
      # {"id":"com.android.tools.r8.rewriteFrame","conditions":["throws(Ljava/lang/NullPointerException;)"],"actions":["removeInnerFrames(1)"]}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/d;Landroid/view/accessibility/AccessibilityRecord;)Ljava/lang/Long;"}
    12:25:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0:0 -> a
    12:25:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
    26:33:void io.flutter.Log.w(java.lang.String,java.lang.String,java.lang.Throwable):0:0 -> a
    26:33:java.lang.Long getRecordSourceNodeId(android.view.accessibility.AccessibilityRecord):0 -> a
    26:33:java.lang.Long access$600(io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors,android.view.accessibility.AccessibilityRecord):0 -> a
    1:1:boolean isBitSet(long,int):0:0 -> b
io.flutter.view.AccessibilityViewEmbedder$ViewAndId -> io.flutter.view.e:
# {"id":"sourceFile","fileName":"AccessibilityViewEmbedder.java"}
    android.view.View view -> a
    int id -> b
    1:8:void <init>(android.view.View,int):0:0 -> <init>
    1:8:void <init>(android.view.View,int,io.flutter.view.AccessibilityViewEmbedder$1):0 -> <init>
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Landroid/view/View;I)V"}
io.flutter.view.FlutterCallbackInformation -> io.flutter.view.FlutterCallbackInformation:
# {"id":"sourceFile","fileName":"FlutterCallbackInformation.java"}
io.flutter.view.TextureRegistry$GLTextureConsumer -> io.flutter.view.TextureRegistry$GLTextureConsumer:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$ImageConsumer -> io.flutter.view.TextureRegistry$ImageConsumer:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$ImageTextureEntry -> io.flutter.view.TextureRegistry$ImageTextureEntry:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$OnFrameConsumedListener -> io.flutter.view.f:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$OnTrimMemoryListener -> io.flutter.view.g:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$SurfaceProducer -> io.flutter.view.TextureRegistry$SurfaceProducer:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceProducer$Callback -> io.flutter.view.h:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry -> io.flutter.view.TextureRegistry$SurfaceTextureEntry:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
    long id() -> id
      # {"id":"com.android.tools.r8.synthesized"}
    void release() -> release
      # {"id":"com.android.tools.r8.synthesized"}
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC -> io.flutter.view.i:
# {"id":"sourceFile","fileName":"TextureRegistry.java"}
# {"id":"com.android.tools.r8.synthesized"}
    1:1:void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener):0:0 -> a
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/f;)V"}
    1:1:void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener):0:0 -> b
      # {"id":"com.android.tools.r8.synthesized"}
      # {"id":"com.android.tools.r8.residualsignature","signature":"(Lio/flutter/view/TextureRegistry$SurfaceTextureEntry;Lio/flutter/view/g;)V"}
kotlin.collections.EmptyIterator -> s.a:
# {"id":"sourceFile","fileName":"Collections.kt"}
    kotlin.collections.EmptyIterator INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/a;"}
    3:8:void kotlin.collections.EmptyIterator.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:void add(java.lang.Object):0:0 -> add
    1:1:boolean hasNext():0:0 -> hasNext
    1:1:boolean hasPrevious():0:0 -> hasPrevious
    1:6:java.lang.Void kotlin.collections.EmptyIterator.next():0:0 -> next
    1:6:java.lang.Object next():0 -> next
    1:1:int nextIndex():0:0 -> nextIndex
    1:6:java.lang.Void kotlin.collections.EmptyIterator.previous():0:0 -> previous
    1:6:java.lang.Object previous():0 -> previous
    1:1:int previousIndex():0:0 -> previousIndex
    1:1:void remove():0:0 -> remove
    1:1:void set(java.lang.Object):0:0 -> set
kotlin.collections.EmptyList -> s.b:
# {"id":"sourceFile","fileName":"Collections.kt"}
    kotlin.collections.EmptyList INSTANCE -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Ls/b;"}
    3:8:void kotlin.collections.EmptyList.<init>():0:0 -> <clinit>
    3:8:void <clinit>():0 -> <clinit>
    1:1:void add(int,java.lang.Object):0:0 -> add
    2:2:boolean add(java.lang.Object):0:0 -> add
    1:1:boolean addAll(int,java.util.Collection):0:0 -> addAll
    2:2:boolean addAll(java.util.Collection):0:0 -> addAll
    1:1:void clear():0:0 -> clear
    11:14:boolean kotlin.collections.EmptyList.contains(java.lang.Void):0:0 -> contains
    11:14:boolean contains(java.lang.Object):0 -> contains
    1:1:boolean containsAll(java.util.Collection):0:0 -> containsAll
    1:1:boolean equals(java.lang.Object):0:0 -> equals
    1:25:java.lang.Void kotlin.collections.EmptyList.get(int):0:0 -> get
    1:25:java.lang.Object get(int):0 -> get
    1:1:int hashCode():0:0 -> hashCode
    11:14:int kotlin.collections.EmptyList.indexOf(java.lang.Void):0:0 -> indexOf
    11:14:int indexOf(java.lang.Object):0 -> indexOf
    1:1:boolean isEmpty():0:0 -> isEmpty
    1:1:java.util.Iterator iterator():0:0 -> iterator
    11:14:int kotlin.collections.EmptyList.lastIndexOf(java.lang.Void):0:0 -> lastIndexOf
    11:14:int lastIndexOf(java.lang.Object):0 -> lastIndexOf
    1:1:java.util.ListIterator listIterator():0:0 -> listIterator
    2:2:java.util.ListIterator listIterator(int):0:0 -> listIterator
    1:1:java.lang.Object remove(int):0:0 -> remove
    2:2:boolean remove(java.lang.Object):0:0 -> remove
    1:1:boolean removeAll(java.util.Collection):0:0 -> removeAll
    1:1:boolean retainAll(java.util.Collection):0:0 -> retainAll
    1:1:java.lang.Object set(int,java.lang.Object):0:0 -> set
    1:1:int size():0:0 -> size
    1:1:java.util.List subList(int,int):0:0 -> subList
    1:1:java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection):0:0 -> toArray
    1:1:java.lang.Object[] toArray():0 -> toArray
    2:2:java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray(java.util.Collection,java.lang.Object[]):0:0 -> toArray
    2:2:java.lang.Object[] toArray(java.lang.Object[]):0 -> toArray
    1:1:java.lang.String toString():0:0 -> toString
kotlin.jvm.internal.CollectionToArray -> t.a:
# {"id":"sourceFile","fileName":"CollectionToArray.kt"}
    java.lang.Object[] EMPTY -> a
    1:1:void <clinit>():0:0 -> <clinit>
kotlin.jvm.internal.Intrinsics -> R8$$REMOVED$$CLASS$$27:
# {"id":"sourceFile","fileName":"Intrinsics.java"}
kotlinx.coroutines.flow.StateFlowImpl -> u.a:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
    int sequence -> b
    java.util.concurrent.atomic.AtomicReferenceFieldUpdater _state$FU -> c
    1:1:void <clinit>():0:0 -> <clinit>
    1:6:void kotlinx.coroutines.flow.internal.AbstractSharedFlow.<init>():0:0 -> <init>
    1:6:void <init>(java.lang.Object):0 -> <init>
kotlinx.coroutines.flow.StateFlowKt -> R8$$REMOVED$$CLASS$$28:
# {"id":"sourceFile","fileName":"StateFlow.kt"}
kotlinx.coroutines.flow.internal.NullSurrogateKt -> v.a:
# {"id":"sourceFile","fileName":"NullSurrogate.kt"}
    kotlinx.coroutines.internal.Symbol NULL -> a
      # {"id":"com.android.tools.r8.residualsignature","signature":"Lg/f;"}
    1:11:void kotlinx.coroutines.flow.internal.NullSurrogateKt.<clinit>():0:0 -> <clinit>
    1:11:void v.NullSurrogateKt.$r8$clinit$synthetic():0 -> <clinit>
      # {"id":"com.android.tools.r8.synthesized"}
kotlinx.coroutines.internal.Symbol -> R8$$REMOVED$$CLASS$$29:
# {"id":"sourceFile","fileName":"Symbol.kt"}
